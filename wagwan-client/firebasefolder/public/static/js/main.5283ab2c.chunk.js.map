{"version":3,"sources":["redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","redux/types.js","redux/actions/userActions.js","util/CustomBotton.js","redux/actions/dataActions.js","components/Scream/PostScream.js","components/Layout/Notifications.js","components/Layout/Navbar.js","util/AuthRoute.js","components/Scream/DeleteScream.js","components/Profile/LikeButton.js","components/Scream/Comments.js","components/Scream/CommentForm.js","components/Scream/screamDialog.js","components/Scream/Screams.js","components/Profile/EditDetails.js","util/ProfileSkeleton.js","components/Profile/Profile.js","util/ScreamSkeleton.js","pages/home.js","pages/login.js","pages/signup.js","components/Profile/StaticProfile.js","pages/users.js","App.js","util/theme.js","serviceWorker.js","index.js","images/blank_mans.png","images/6-god.png"],"names":["initialState","athenticated","loading","credentials","likes","notifications","screams","scream","errors","middleWare","thunk","reducer","combineReducers","user","state","action","type","authenticated","payload","userHandle","handle","screamId","filter","like","forEach","not","read","data","index","findIndex","splice","comments","UI","store","createStore","compose","applyMiddleware","logoutUser","dispatch","localStorage","removeItem","axios","defaults","headers","common","getUserData","get","then","res","catch","err","console","log","setAuthHeader","token","FBIdToken","setItem","children","tip","onClick","btnClassName","tipClassName","styles","Tooltip","title","className","placement","IconButton","style","clearErrors","PostScream","open","body","handleOpen","setState","handleClose","props","handleChange","e","target","name","value","handleSubmit","preventDefault","postScream","nextProps","this","classes","Dialog","onClose","fullWidth","closeButton","DialogContent","DialogTitle","paddingLeft","onSubmit","TextField","label","multiline","rows","placeholder","error","helperText","textField","onChange","Button","variant","color","submitButton","disabled","CircularProgress","size","progrssSpinner","Component","Prototype","PropTypes","func","isRequired","object","connect","newScream","post","response","withStyles","theme","spreadThis","Notifications","anchorEl","onMenuOpened","unreadNotificationsId","map","notificationsId","markNotificationsRead","notificationsIcon","dayjs","extend","relativeTime","length","Badge","badgeContent","notificationsMarkUp","verb","time","createdAt","fromNow","iconColor","icon","marginRight","MenuItem","key","Math","random","Typography","component","Link","to","recipient","sender","aria-owns","undefined","aria-haspopup","Menu","Boolean","onEntered","notificationsIds","Navbar","AppBar","Toolbar","CustomBotton","rest","render","DeleteScream","deleteScream","deleteButton","maxWidth","DialogActions","delete","left","position","top","LikeButton","likedScream","find","likeScream","unlikeScream","likeButton","mapActionsToProps","padding","Comments","Grid","container","comment","userImage","item","sm","src","alt","commentImage","commentData","format","invisibleSep","visibleSep","CommentForm","submitComment","textAlign","button","ScreamDialog","oldPath","newPAth","getScream","window","location","pathname","newPath","history","pushState","openDialog","likeCount","commentCount","dialogMarkUp","spinner","thickness","spacing","profileImage","commentButton","dialogContent","Screams","Card","card","CardMedia","image","CardContent","content","paddingRight","expandButton","marginBottom","display","minWidth","objectFit","EditDetails","bio","website","mapUserDataToState","userData","editUserData","float","height","backgroundColor","palette","primary","main","width","margin","fullLine","halfLine","Paper","paper","profile","blankMans","Profile","handleImageChange","profilePic","files","formData","FormData","append","uploadImage","handlePictureEdit","document","getElementById","click","handleLogout","createAt","imageUrl","id","hidden","href","rel","align","buttons","cardContent","flexDirection","cover","overflow","date","Array","from","home","getScreams","recentScreamsMarkup","xs","login","email","password","loginUser","direction","justify","alignItems","form","sixGod","pageTitle","noValidate","general","LoginError","push","signup","newUserData","confirmPassword","signupUser","require","StaticProfile","prototypes","users","screamIdParam","match","params","screamsMarkup","createMuiTheme","light","dark","contrastText","secondary","typography","useNextVariants","marginTop","fontSize","border","borderBottom","borderRadius","verticalAlign","cursor","marginLeft","baseURL","jwtDecode","exp","Date","now","App","exact","path","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.5283ab2c.chunk.js","sourcesContent":["import {\n    SET_USER,\n    SET_AUTHENTICATED,\n    SET_UNAUTHENTICATED,\n    LOADING_USER,\n    LIKE_SCREAM,\n    UNLIKE_SCREAM,\n    MARK_NOTIFICATIONS\n} from '../types';\n\nconst initialState = { // userReducer\n    athenticated: false,\n    loading: false,\n    credentials: {},\n    likes: [],\n    notifications: []\n};\n\nexport default function(state = initialState, action) { // Takes action and initial state\n    switch(action.type){\n        // If any of the  states change\n        case SET_AUTHENTICATED:\n            return {\n                ...state,\n                authenticated: true\n            };\n            case SET_UNAUTHENTICATED:\n                return initialState;\n            case SET_USER:\n                return {\n                    authenticated: true, // We got user data\n                    loading: false,\n                    ...action.payload\n                };\n            case LOADING_USER:\n                return {\n                    ...state,\n                    loading: true\n                };\n            case LIKE_SCREAM:\n                return {\n                    ...state,\n                    likes: [\n                        ...state.likes,\n                        { // add new like\n                            userHandle: state.credentials.handle,\n                            screamId: action.payload.screamId\n                        }\n                    ]\n                }\n            case UNLIKE_SCREAM:\n                return { // remove the like and user\n                    ...state,\n                    likes: state.likes.filter(like => like.screamId !== action.payload.screamId)\n                }\n            case MARK_NOTIFICATIONS:\n                state.notifications.forEach(not => not.read = true);\n                return {\n                    ...state\n                }\n\n                default:\n                    return state;\n    }\n}\n","import {\n    SET_SCREAMS,\n    LIKE_SCREAM,\n    UNLIKE_SCREAM,\n    LOADING_DATA,\n    POST_SCREAM,\n    DELETE_SCREAM,\n    SET_SCREAM,\n    SUBMIT_COMMENT\n} from '../types';\n\nconst initialState = {\n    screams: [], // array holding all screams\n    scream: {}, // details of one scream\n    loading: false,\n};\n\nexport default function(state = initialState, action){\n    switch(action.type) {\n        case LOADING_DATA:\n            return {\n                ...state,\n                loading: true\n            }\n        case SET_SCREAMS:\n            return {\n                ...state,\n                screams: action.payload,\n                loading: false\n            }\n        case LIKE_SCREAM:\n        case UNLIKE_SCREAM:\n            // Add like to array of user like and increment like\n            let index = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId); // screamId same as payload\n            state.screams[index] = action.payload; // replace it in the state\n            // check scream stored in singular scream obj has same Id, liked the scream opened\n            if (state.scream.screamId === action.payload.screamId) {\n                state.scream = action.payload;\n            }\n            return {\n                ...state\n            };\n        case DELETE_SCREAM:\n            // find the index of scream and remove it from screams array\n            index = state.screams.findIndex(scream => scream.screamId === action.payload);\n            state.screams.splice(index, 1); // remove 1 element at array[index]\n            return {\n                ...state\n            };\n        case POST_SCREAM:\n            // need to add it to screams array\n            return {\n                ...state,\n                screams: [\n                    action.payload, // add new screams to top\n                    ...state.screams // spread the old screams\n                ]\n            };\n        case SET_SCREAM:\n            return {\n                ...state,\n                scream: action.payload\n            };\n        case SUBMIT_COMMENT:\n            return {\n                ...state,\n                scream: { // Add to top\n                    ...state.scream,\n                    comments: [action.payload, ...state.scream.comments]\n                }\n            }\n        default:\n            return state;\n\n    }\n}\n","import {\n    SET_ERRORS,\n    CLEAR_ERRORS,\n    LOADING_UI,\n    STOP_LOADING_UI\n} from '../types';\n\nconst initialState = {\n    loading: false,\n    errors: null\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type){\n        case SET_ERRORS:\n            return {\n                ...state,\n                loading: false,\n                errors: action.payload\n            };\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                loading: false,\n                errors: null\n            };\n        case LOADING_UI:\n            return {\n                ...state,\n                loading: true\n            };\n        case STOP_LOADING_UI:\n            return {\n                ...state,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}\n","import {\n    createStore,\n    combineReducers,\n    applyMiddleware,\n    compose\n } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport userReducer from './reducers/userReducer';\nimport dataReducer from './reducers/dataReducer';\nimport uiReducer from './reducers/uiReducer';\n\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst reducer = combineReducers({\n    user: userReducer,\n    data: dataReducer,\n    UI: uiReducer\n});\n\nconst store = createStore(reducer, initialState,  compose(applyMiddleware(...middleWare)));\n\nexport default store;\n","// DEFINE ACTIONS (one object per action)\n\n// user reducer types\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\nexport const SET_USER = 'SET_USER';\nexport const LOADING_USER = 'LOADING_USER';\nexport const MARK_NOTIFICATIONS = 'MARK_NOTIFICATIONS';\n\n// UI reducer types\nexport const SET_ERRORS = 'SET_ERRORS';\nexport const LOADING_UI = 'LOADING_UI';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const LOADING_DATA = 'LOADING_DATA';\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\n\n\n// Data reducer types\nexport const SET_SCREAMS = 'SET_SCREAMS';\nexport const SET_SCREAM = 'SET_SCREAM';\nexport const LIKE_SCREAM = 'LIKE_SCREAM';\nexport const UNLIKE_SCREAM = 'UNLIKE_SCREAM';\nexport const DELETE_SCREAM = 'DELETE_SCREAM';\nexport const POST_SCREAM = 'POST_SCREAM';\nexport const SUBMIT_COMMENT = 'SUBMIT_COMMENT';\n","import {\n    SET_USER,\n    SET_ERRORS,\n    CLEAR_ERRORS,\n    LOADING_UI,\n    SET_UNAUTHENTICATED,\n    LOADING_USER,\n    MARK_NOTIFICATIONS\n} from '../types';\nimport axios from 'axios';\n\nexport const loginUser = ( userData, history ) => (dispatch) => { // Need dispatch becuase asynchronous code\n    dispatch({ type: LOADING_UI }); // Link method component to action (userData to Loading UI)\n    axios\n        .post('/login', userData )\n            .then(response => {\n                setAuthHeader(response.data.token)\n\n                dispatch(getUserData());\n                dispatch({ type: CLEAR_ERRORS }); // If not errors, we can redirect\n                history.push('/'); // Push state in url and go to it (redirect to home page)\n            })\n            .catch(err => {\n                dispatch({\n                    type: SET_ERRORS,\n                    payload: err.response.data\n                });\n            });\n}\n\n// Almost same as Login\nexport const signupUser = ( newUserData, history ) => (dispatch) => { // Need dispatch becuase asynchronous code\n    dispatch({ type: LOADING_UI }); // Link method component to action (newUserData to Loading UI)\n    axios\n        .post('/signup', newUserData )\n            .then(response => {\n                setAuthHeader(response.data.token)\n\n                dispatch(getUserData());\n                dispatch({ type: CLEAR_ERRORS }); // If not errors, we can redirect\n                history.push('/'); // Push state in url and go to it (redirect to home page)\n            })\n            .catch(err => {\n                dispatch({\n                    type: SET_ERRORS,\n                    payload: err.response.data\n                });\n            });\n}\n\n// Log user out\nexport const logoutUser = () => (dispatch) => {\n    localStorage.removeItem('FBIdToken'); // Remove token from local storage\n    delete axios.defaults.headers.common['Authorization']; // Delete entry (removes the auth header)\n    dispatch({ type: SET_UNAUTHENTICATED }); // Will clear user state (==> set inital state (empty everything))\n}\n\nexport const getUserData = () => (dispatch) => {\n    dispatch({ type: LOADING_USER });\n    axios\n        .get('/user')\n            .then(res => {\n                dispatch({\n                    type: SET_USER,\n                    payload: res.data // Data that sent to reducer\n                })\n            })\n            .catch(err => console.log(err));\n}\n\nexport const uploadImage = (formData) => (dispatch) => {\n    // Call user loading action\n    dispatch({ type: LOADING_USER });\n    axios.post('/user/image', formData)\n        .then(res => {\n            dispatch(getUserData());\n        })\n        .catch(err => console.log(err));\n};\n\n// ftn that send request to edit details\nexport const editUserData = (userData) => (dispatch) => {\n    dispatch({ type: LOADING_USER });\n    axios.post('/user', userData)\n        .then(() => {\n            dispatch(getUserData());\n        })\n        .catch(err => console.log(err));\n}\n\n\nconst setAuthHeader = (token) => {\n    const FBIdToken = `Bearer ${token}`;\n    localStorage.setItem('FBIdToken', `Bearer ${token}`);\n    axios.defaults.headers.common['Authorization'] = FBIdToken; // Each request gonna have a header looking like dat\n}\n\n\nexport const markNotificationsRead = (notificationsIds) => dispatch => {\n    axios.post(`/notifications`, notificationsIds)\n        .then(res => {\n             dispatch({\n                 type: MARK_NOTIFICATIONS\n             })\n        })\n        .catch(err => console.error(err));\n}\n","import React from 'react'\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport default ({ children, tip, onClick, btnClassName, tipClassName, styles }) => (\n    <Tooltip title={tip} className={tipClassName} placement='top'>\n        <IconButton onClick={onClick} className={btnClassName} style={{styles}}>\n            {children}\n        </IconButton>\n    </Tooltip>\n);\n","import {\n    SET_SCREAMS,\n    LOADING_DATA,\n    LIKE_SCREAM,\n    UNLIKE_SCREAM,\n    DELETE_SCREAM,\n    SET_ERRORS,\n    CLEAR_ERRORS,\n    LOADING_UI,\n    POST_SCREAM,\n    SET_SCREAM,\n    STOP_LOADING_UI,\n    SUBMIT_COMMENT\n} from '../types';\nimport axios from 'axios';\n\n// Get all screams\nexport const getScreams= () => dispatch => {\n    dispatch({ type: LOADING_DATA });\n    axios.get('/screams')\n        .then(res => {\n            dispatch({\n                type: SET_SCREAMS,\n                payload: res.data\n            })\n        })\n        .catch(err => {\n            dispatch({\n                type: SET_SCREAMS,\n                payload: []\n            })\n        })\n}\n\n// Like a scream\nexport const likeScream = (screamId) => dispatch => {\n    axios.get(`/scream/${screamId}/like`)\n        .then(res => {\n            dispatch({\n                type: LIKE_SCREAM,\n                payload: res.data\n            })\n        })\n        .catch(err => console.log(err));\n};\n\n// Unlike a scream\nexport const unlikeScream = (screamId) => dispatch => {\n    axios.get(`/scream/${screamId}/unlike`)\n        .then(res => {\n            dispatch({\n                type: UNLIKE_SCREAM,\n                payload: res.data\n            })\n        })\n        .catch(err => console.log(err));\n};\n\n\nexport const deleteScream = (screamId) => (dispatch) => {\n    axios.delete(`/scream/${screamId}`)\n        .then(() => {\n            dispatch({\n                type: DELETE_SCREAM,\n                payload: screamId\n            })\n        })\n        .catch(err => console.error(err));\n}\n\n// Post a scream\nexport const postScream = (newScream) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios.post('/scream', newScream)\n        .then(res => {\n            // dispatch a new type\n            dispatch({\n                type: POST_SCREAM,\n                payload: res.data\n            });\n            dispatch(clearErrors());\n        })\n        .catch(err => {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        })\n}\n\n// clear errors for posting (Actions creater => function to just dispatch action)\nexport const clearErrors = () => dispatch => {\n    dispatch({ type: CLEAR_ERRORS });\n}\n\nexport const getScream = (screamId) => dispatch => {\n    dispatch({ type: LOADING_UI })\n    axios.get(`/scream/${screamId}`)\n        .then(res => {\n            dispatch({\n                type: SET_SCREAM,\n                payload: res.data\n            });\n            dispatch({ type: STOP_LOADING_UI })\n        })\n        .catch(err => console.error(err));\n}\n\n// Submit a comment\nexport const submitComment = (screamId, commentData) => (dispatch) => {\n    axios.post(`/scream/${screamId}/comment`, commentData)\n    .then(res => {\n        dispatch({\n            type: SUBMIT_COMMENT,\n            payload: res.data\n        });\n        dispatch(clearErrors());\n    })\n    .catch(err => {\n        dispatch({\n            type: SET_ERRORS,\n            payload: err.response.data\n        })\n    })\n}\n\n\n// Go to user page\nexport const getUserData = (userHandle) => (dispatch) => {\n    dispatch({ type: LOADING_DATA })\n    axios.get(`/user/${userHandle}`)\n        .then(res => {\n            dispatch({\n                type: SET_SCREAMS,\n                payload: res.data.screams\n            });\n        })\n        .catch(() => {\n            dispatch({\n                type: SET_SCREAMS,\n                payload: null\n            })\n        })\n}\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CustomButton from '../../util/CustomBotton';\n\n// Redux tings\nimport { connect } from 'react-redux';\nimport { postScream, clearErrors } from '../../redux/actions/dataActions';\n\n// MUI tings\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nconst styles = theme => ({\n    ...theme.spreadThis,\n});\n\n\nclass PostScream extends Component {\n    state = {\n        open: false,\n        body: '',\n        errors: {}\n    };\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.UI.errors) {\n            this.setState({\n                errors: nextProps.UI.errors\n            });\n        };\n        if (!nextProps.UI.errors && !nextProps.UI.loading) {\n            this.setState({\n                body: '',\n                open: false,\n                errors: {}\n            }); // remove the text when submitted\n        }\n    }\n    handleOpen = () => {\n        this.setState({ open: true })\n    };\n    handleClose = () => {\n        this.props.clearErrors(); // clear errors from props\n        this.setState({ open: false, errors: {} }) // Clear the errors once closed\n    };\n    handleChange = (e) => {\n        // Change for each character\n        this.setState({ [e.target.name]: e.target.value })\n    };\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.postScream({ body: this.state.body })\n    };\n    render(){\n        const { errors } = this.state;\n        const { classes, UI: { loading }} = this.props;\n        return (\n            <Fragment>\n                <CustomButton // Addition button icon\n                    onClick={this.handleOpen}\n                    tip=\"Make a Post\">\n                        <AddIcon />\n                </CustomButton>\n                <Dialog // open the dialogue to comment\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth>\n                        <CustomButton // The X top right to close\n                            tip='Close'\n                            onClick={this.handleClose}\n                            tipClassName={classes.closeButton}>\n                                <CloseIcon />\n                        </CustomButton>\n                        {/* Section to add comment */}\n                        <DialogContent>\n                            <DialogTitle style={{ paddingLeft: \"0px\" }}>What's on your mind?</DialogTitle>\n                            <form onSubmit={this.handleSubmit}>\n                                <TextField\n                                    name='body'\n                                    type=\"text\"\n                                    label=\"Post\"\n                                    multiline\n                                    rows=\"3\"\n                                    placeholder=\"Spill the beans\"\n                                    error={errors.body ? true : false} // errors in the validation\n                                    helperText= {errors.body} // show error message\n                                    className={classes.textField}\n                                    onChange={this.handleChange}\n                                    fullWidth/>\n                                    <Button\n                                        type='submit'\n                                        variant='contained'\n                                        color='primary'\n                                        className={classes.submitButton}\n                                        disabled={loading}>\n                                            Submit\n                                            {loading && (\n                                                <CircularProgress\n                                                    size={30}\n                                                    className={classes.progrssSpinner} />\n                                            )}\n                                    </Button>\n                            </form>\n                        </DialogContent>\n                    </Dialog>\n            </Fragment>\n        )\n    }\n}\n\n\nPostScream.Prototype = {\n    postScream: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired,\n    UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    UI: state.UI\n})\n\nexport default connect(mapStateToProps, { postScream, clearErrors })(withStyles(styles)(PostScream));\n","import React, { Component, Fragment } from 'react';\nimport dayjs from 'dayjs' // format the date\nimport relativeTime from 'dayjs/plugin/relativeTime' // relative time lib\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// MUI tings\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/ToolTip';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\n\n// Icons\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ChatIcon from '@material-ui/icons/Chat';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { markNotificationsRead } from '../../redux/actions/userActions';\n\nclass Notifications extends Component {\n    state = {\n        anchorEl: null\n    }\n\n    handleOpen= (e) => {\n        this.setState({\n            anchorEl: e.target // menu = object\n        });\n    }\n\n    // Handle closing the notifications tab\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    // Handle opening the notifications tab\n    onMenuOpened = () => {\n        // Get the unread notification IDs\n        let unreadNotificationsId = this.props.notifications\n            .filter(not => !not.read) // Only add the elements that have not been read to the array (filter)\n            .map(not => not.notificationsId);\n        this.props.markNotificationsRead(unreadNotificationsId); // send the ID to post req to make it as read = true\n    };\n\n    render() {\n        const notifications = this.props.notifications; // notification object\n        const anchorEl = this.state.anchorEl;\n\n        dayjs.extend(relativeTime);\n\n        let notificationsIcon;\n        // Change notification deping on comment or like9\n        if (notifications && notifications.length > 0){\n            // show the number of nots\n            notifications.filter(not => not.read === false).length > 0 // filter the nonread notifications\n            ? (notificationsIcon = (\n\n                <Badge badgeContent={notifications.filter(not => not.read === false).length} // Indicate the number of non read notifications\n                    color='secondary'>\n                        <NotificationsIcon />\n                </Badge>\n\n            )) : (\n                notificationsIcon = <NotificationsIcon /> // An empty notification if there no new nots\n            )\n        } else {\n            notificationsIcon = <NotificationsIcon /> // An empty notification if there no new nots\n        }\n\n        let notificationsMarkUp =\n            notifications && notifications.length > 0 ?(\n                // map thru nots and show em\n                notifications.map((not) => { // Mapping \"not\" to each of these elements ==> not object = all elements of notification\n\n                    const verb = not.type === 'like' ? 'liked' : 'commented on'; // Verb if its a comment of a like\n                    const time = dayjs(not.createdAt).fromNow();\n                    const iconColor = not.read ? 'primary' : 'secondary'; // if read, mark diff colors\n                    const icon = not.type === 'like' ? (\n\n                        <FavoriteIcon color={iconColor} style={{ marginRight: 10 }} /> // Like icon\n                    ) : (\n                        <ChatIcon color={iconColor} style= {{ marginRight: 10 }} /> // Comment icon\n                    );\n                    return (\n                        // List all the notifications\n                        <MenuItem key={Math.random()} onClick={this.handleClose}>\n                            {icon}\n                            <Typography\n                                component={Link}\n                                color='secondary'\n                                variant='body1'\n                                to={`/users/${not.recipient}/scream/${not.screamId}`}>\n                                    {not.sender} {verb} ya post {time}\n                                </Typography>\n                        </MenuItem>\n                    )\n                })\n            ) : (\n                <MenuItem onClick={this.handleClose}>\n                     Ya got no notifications ya bum\n                </MenuItem>\n            )\n        return (\n\n            <Fragment>\n                <Tooltip placement=\"top\" title='Notifications'>\n                    <IconButton aria-owns={anchorEl ? 'simple-menu' : undefined}\n                        aria-haspopup=\"true\"\n                        onClick={this.handleOpen}>\n                            {notificationsIcon}\n                        </IconButton>\n                </Tooltip>\n                <Menu\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleClose}\n                    onEntered={this.onMenuOpened}>\n                        {notificationsMarkUp}\n                    </Menu>\n            </Fragment>\n\n        )\n    }\n}\n\nNotifications.propTypes = {\n    markNotificationsRead: PropTypes.func.isRequired, // post req to mark as read\n    notifications: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n    notifications: state.user.notifications\n})\n\nexport default connect(mapStateToProps, { markNotificationsRead })(Notifications);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport CustomBotton from '../../util/CustomBotton'\nimport PostScream from '../Scream/PostScream';\nimport Notifications from './Notifications';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\n// MUI tings\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\n// Icons\nimport HomeIcon from '@material-ui/icons/Home';\n\nexport class Navbar extends Component {\n    render() {\n        const { authenticated } = this.props\n        return (\n            <AppBar>\n                {/* Use toolbar because its inline - one after the other */}\n                <Toolbar className=\"nav-container\">\n                    {/* When the user is logged in, they'll be prompted with these options */}\n                    {authenticated ? ( // if user is authenticated\n                        <Fragment>\n                            <PostScream />\n\n                            <Link to=\"/\">\n                                <CustomBotton tip=\"Home\">\n                                    <HomeIcon />\n                                </CustomBotton>\n                            </Link>\n\n                            <Notifications />\n                        </Fragment>\n                    ) : (\n                        // When user is offline, they'll be prompted with these options\n                        <Fragment>\n                            <Button color='inherit' component={Link} to=\"/login\">Login</Button>\n                            <Button color='inherit' component={Link} to=\"/\">Home</Button>\n                            <Button color='inherit' component={Link} to=\"/signup\">Sign Up</Button>\n                        </Fragment>\n                    )}\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nNavbar.propTypes = {\n    authenticated: PropTypes.bool // Not required since user might not be authenticated\n}\n\nconst mapStateToProps = state => ({\n    authenticated: state.user.authenticated\n})\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => (\n    <Route\n        {...rest}\n        render={(props) =>\n            authenticated === true ? <Redirect to=\"/\" /> : <Component {...props} />\n        }\n    />\n);\n\nconst mapStateToProps = (state) => ({\n    authenticated: state.user.authenticated // Get authenticated prop\n})\n\nAuthRoute.propTypes = {\n    user: PropTypes.object\n};\n\nexport default connect(mapStateToProps)(AuthRoute); // no actions needed\n","import React, { Component, Fragment } from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from 'prop-types';\nimport CustomButton from '../../util/CustomBotton';\n\n// MUI tings\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\n\nimport { connect } from 'react-redux';\nimport { deleteScream } from '../../redux/actions/dataActions';\n\n\nconst styles = {\n    deleteButton: {\n        left: \"92%\",\n        position: \"absolute\",\n        top: \"3%\"\n    }\n}\n\n\n\nclass DeleteScream extends Component {\n    state = {\n        open: false\n    }\n    handleOpen = () => {\n        this.setState({ open: true })\n    }\n    handleClose = () => {\n        this.setState({ open: false })\n    }\n    deleteScream = () => {\n        this.props.deleteScream(this.props.screamId); // passed down from the scream\n        this.setState({ open: false }); // once we delete sceam, close dialog\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Fragment>\n                <CustomButton\n                    tip=\"Delete Post\"\n                    onClick={this.handleOpen}\n                    btnClassName={classes.deleteButton}>\n                        <DeleteOutline style={{ color: \"#e57373\" }} />\n                </CustomButton>\n                <Dialog\n                    open={this.state.open} // handled by open state\n                    onClose={this.handleClose} // handle by close state\n                    fullWidth\n                    maxWidth=\"sm\"\n                    >\n                     <DialogTitle>\n                         You sure you finna delete the post?\n                    </DialogTitle>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.deleteScream} color='secondary'>\n                            Delete\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        )\n    }\n}\n\nDeleteScream.propTypes = {\n    deleteScream: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired,\n    screamId: PropTypes.string.isRequired\n}\n\n\n// Don't need map state to props, i.e, dont need state only action\nexport default connect(null, { deleteScream })(withStyles(styles)(DeleteScream));\n","import React, { Component } from 'react'\nimport CustomButton from '../../util/CustomBotton';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// Icons\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\n// Redux tings\nimport { connect } from 'react-redux';\nimport { likeScream, unlikeScream } from '../../redux/actions/dataActions';\n\nconst styles = {\n    likeButton: {\n        padding: '4px'\n    }\n}\n\nexport class LikeButton extends Component {\n    likedScream = () => {\n        // Check if theres a likes in user object\n        if (this.props.user.likes &&\n            this.props.user.likes.find(\n                like => like.screamId === this.props.screamId)) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    likeScream = () => {\n        this.props.likeScream(this.props.screamId);\n      };\n    unlikeScream = () => {\n        this.props.unlikeScream(this.props.screamId);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { authenticated } = this.props.user;\n        const likeButton = !authenticated ? ( // Not logged in\n            <Link to='/login'>\n                <CustomButton tip='Like' btnClassName={classes.likeButton}>\n                    <FavoriteBorder color=\"primary\" />\n                </CustomButton>\n            </Link>\n        ) : this.likedScream() ? ( // If returns true, means its present in the array (If user is logged in)\n                <CustomButton tip='Unlike' onClick={this.unlikeScream} btnClassName={classes.likeButton}>\n                    <FavoriteIcon color=\"primary\" />\n                </CustomButton>\n            ) : (\n                <CustomButton tip='Like' onClick={this.likeScream} btnClassName={classes.likeButton}>\n                    <FavoriteBorder color=\"primary\" />\n                </CustomButton>\n            );\n        return likeButton\n    }\n}\n\nLikeButton.propTypes = {\n    user:PropTypes.object.isRequired,\n    screamId: PropTypes.string.isRequired,\n    likeScream: PropTypes.func.isRequired,\n    unlikeScream: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user\n})\n\nconst mapActionsToProps = {\n    likeScream,\n    unlikeScream\n}\n\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(LikeButton));\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\n\n// MUI\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    ...theme.spreadThis,\n});\n\nclass Comments extends Component {\n    render() {\n        const { comments, classes } = this.props; // destructure\n        return (\n            <Grid container>\n                {/* Loop the number of comment times and return each of the comment */}\n                {comments.map((comment, index) => {\n                const {\n                    body,\n                    createdAt,\n                    userImage,\n                    userHandle\n                } = comment;\n                    return ( // returning this in the html\n                        <Fragment key={createdAt}>\n                            <Grid item sm={12}>\n                                <Grid container>\n                                    {/* Image for comments section */}\n                                    <Grid item sm={2}>\n                                        <img src={userImage} alt=\"comment\" className={classes.commentImage}/>\n                                    </Grid>\n                                    <Grid item sm={9}>\n                                        {/* Name */}\n                                        <div className={classes.commentData}>\n                                            <Typography variant=\"h5\" component={Link} to={`/users/${userHandle}`} color=\"primary\">\n                                                    {userHandle}\n                                            </Typography>\n                                            {/* Time */}\n                                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                                    {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\n                                            </Typography>\n                                            <hr className={classes.invisibleSep} />\n                                            {/* Comment */}\n                                            <Typography variant=\"body1\">{body}</Typography>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            {index !== comments.length -1 && ( // Dont add line below last comment\n                                <hr className={classes.visibleSep} />\n                            )}\n                        </Fragment>\n                    )\n                })}\n            </Grid>\n        )\n    }\n\n}\n\nComments.propTypes = {\n    comments: PropTypes.array.isRequired\n};\n\nexport default withStyles(styles)(Comments);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n// MUI tings\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\n// Redux timgs\nimport { connect } from 'react-redux';\nimport { submitComment } from '../../redux/actions/dataActions';\n\nconst styles = theme => ({\n    ...theme.spreadThis\n});\n\nclass CommentForm extends Component {\n    state = {\n        body: '',\n        errors: {}\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.UI.errors) {\n            this.setState({ errors: nextProps.UI.errors})\n        };\n        if (!nextProps.UI.errors && !nextProps.UI.loading) {\n            this.setState({\n                body: ''\n            });\n        };\n    };\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    handleSubmit  = (e) => {\n        e.preventDefault(); // prevents either the buttong or input being clicked, only the form\n        // Create a post request sending data to `/scream/${screamId}/comment`, commentData\n        this.props.submitComment(this.props.screamId, { body: this.state.body });\n    };\n\n    render() {\n        const { authenticated, classes } = this.props; // destructuring props\n        const errors = this.state.errors;\n\n        const commentFormMarkup = authenticated ? (\n            // center align the comments\n            <Grid item sm={12} style={{ textAlign: 'center' }}>\n                <form onSubmit={this.handleSubmit}>\n                    <TextField\n                        name='body'\n                        type='text'\n                        label='Comment on Post'\n                        error={ errors.comment ? true : false}\n                        helperText={errors.comment}\n                        value={this.state.body}\n                        onChange={this.handleChange}\n                        fullWidth\n                        className={classes.textField} />\n\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color='primary'\n                            className={classes.button}>\n                                Submit\n                        </Button>\n\n                </form>\n                <hr className={classes.visibleSep} />\n            </Grid>\n\n        ) : null\n        return commentFormMarkup; // return the comment\n    };\n};\n\nCommentForm.propTypes = {\n    submitComment: PropTypes.func.isRequired,\n    UI: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n    screamId: PropTypes.string.isRequired,\n    authenticated: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    UI: state.UI,\n    authenticated: state.user.authenticated // dont wanna show form if not logged in\n});\n\nexport default connect(mapStateToProps, { submitComment })(withStyles(styles)(CommentForm));\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CustomButton from '../../util/CustomBotton';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\nimport LikeButton from '../Profile/LikeButton'\nimport Comments from './Comments';\nimport CommentForm from './CommentForm';\n\n\n// MUI tings\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n// Icons\nimport CloseIcon from '@material-ui/icons/Close';\nimport ChatIcon from '@material-ui/icons/Chat';\n\n\n// Redux tings\nimport { connect } from 'react-redux';\nimport { getScream, clearErrors } from '../../redux/actions/dataActions';\n\nconst styles = theme => ({\n    ...theme.spreadThis,\n    commentButton: {\n        padding: '5px'\n    }\n});\n\nclass ScreamDialog extends Component {\n    state = {\n        open: false,\n        oldPath: '',\n        newPAth: ''\n    };\n    handleOpen = () => {\n        this.setState({ open: true })\n        this.props.getScream(this.props.screamId); // when open post, need to send req to server to get scream\n    };\n\n    componentDidMount() {\n        if (this.props.openDialog) {\n          this.handleOpen();\n        };\n    };\n    handleOpen = () => { // Create a new path when opening a post\n        let oldPath = window.location.pathname;\n        const { userHandle, screamId } = this.props;\n        const newPath = `/users/${userHandle}/scream/${screamId}`;\n\n        if (oldPath === newPath) { // refresh the old path to not get lost\n            oldPath = `/users/${userHandle}`; // changes the url\n        };\n        window.history.pushState(null, null, newPath); // Go to the new path i.e the mans comments window\n\n        this.setState({ open: true, oldPath, newPath });\n        this.props.getScream(this.props.screamId); // Get the scream info\n\n    };\n\n    handleClose = () => {\n        window.history.pushState(null, null, this.state.oldPath); // change the path back to \"/\"\n        this.setState({ open: false });\n        this.props.clearErrors(); // clear errors when closing\n    };\n\n    render() {\n        const { classes,\n            scream: {\n                screamId,\n                body,\n                createdAt,\n                likeCount,\n                commentCount,\n                userImage,\n                userHandle,\n                comments // array of comments\n            },\n            UI: { loading }\n        } = this.props;\n\n        const dialogMarkUp = loading ? (\n            // Spinner\n            <div className={classes.spinner}>\n                <CircularProgress size={200} thickness={2}/>\n            </div>\n        ) : (\n            <Grid container spacing={1}>\n                {/* Image of commentor */}\n                <Grid item sm={5}>\n                    <img src={userImage} alt =\"Profile\" className={classes.profileImage}/>\n                </Grid>\n                <Grid item sm={7}>\n                    {/* USERS NAME => link to their profile */}\n                    <Typography\n                        component={Link}\n                        color=\"primary\"\n                        variant=\"h5\"\n                        to={`/users/${userHandle}` }>\n                            @{userHandle}\n                    </Typography>\n                    <hr className={classes.invisibleSep} />\n                    {/* Date */}\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\">\n                            {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\n                    </Typography>\n                    <hr className={classes.invisibleSep} />\n                    {/* Content of comment */}\n                    <Typography variant='body1'>\n                        <span>{body}</span>\n                    </Typography>\n\n                    {/* Display like and comment count */}\n                    <LikeButton screamId={screamId} />\n                    <span>{likeCount} Likes</span>\n                    <CustomButton tip=\"Comments\" btnClassName={classes.commentButton}>\n                        <ChatIcon color=\"primary\"/>\n                    </CustomButton>\n                    <span>{commentCount} Comments</span>\n\n                </Grid>\n                <hr className={classes.visibleSep} />\n                {/* Send the screamId to CommentForm => Creates its own comment */}\n                <CommentForm screamId={screamId} />\n                <Comments comments={comments} />\n            </Grid>\n        );\n\n    return (\n        <Fragment>\n            <CustomButton // The expand button for the comments\n                onClick={this.handleOpen}\n                tip=\"Comment\"\n                btnClassName={classes.commentButton}>\n                    <ChatIcon color=\"primary\" />\n            </CustomButton>\n            <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                fullWidth>\n                    {/* Close button */}\n                    <CustomButton\n                        tip='Close'\n                        onClick={this.handleClose}\n                        tipClassName={classes.closeButton}>\n                            <CloseIcon />\n                    </CustomButton>\n                    {/* Content of the scream */}\n                    <DialogContent className={classes.dialogContent}>\n                        {dialogMarkUp}\n                    </DialogContent>\n                </Dialog>\n        </Fragment>\n        );\n    };\n\n};\n\nScreamDialog.propTypes = {\n    getScream: PropTypes.func.isRequired,\n    screamId: PropTypes.string.isRequired,\n    userHandle: PropTypes.string.isRequired,\n    scream: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n    clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    scream: state.data.scream,\n    UI: state.UI\n});\n\nconst mapActionsToProps = {\n    getScream,\n    clearErrors\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog));\n","import React, { Component } from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport dayjs from 'dayjs' // format the date\nimport relativeTime from 'dayjs/plugin/relativeTime' // relative time lib\nimport PropTypes from 'prop-types';\nimport CustomButton from '../../util/CustomBotton';\nimport DeleteScream from './DeleteScream';\nimport ScreamDialog from './screamDialog';\nimport LikeButton from '../Profile/LikeButton';\nimport { Link } from 'react-router-dom';\n\n\n// MUI tings\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from \"@material-ui/core/Typography\"\n\n// Redux tings\nimport { connect } from 'react-redux';\n\n// Icons\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\n\n\n\n\nconst styles = theme => ({\n    ...theme.spreadThis,\n    card: {\n        position: 'relative',\n        marginBottom: 20,\n        display: 'flex'\n    },\n    image: {\n        minWidth: 200,\n    },\n    content: {\n        padding: 25,\n        objectFit: 'cover'\n    }\n});\n\n\nclass Screams extends Component {\n\n    render() {\n        dayjs.extend(relativeTime)\n        const {\n            classes,\n            scream : {\n                body,\n                createdAt,\n                userImage,\n                userHandle,\n                screamId,\n                likeCount,\n                commentCount\n            },\n            user: {\n                authenticated,\n                credentials: { handle }\n            }\n        } = this.props; // destrcuture classes\n\n        // Delete Button\n        const deleteButton = authenticated && userHandle === handle ? ( // If the user is authenticated and the post is his\n            <DeleteScream screamId={screamId} /> // If the post is the users, allow delete possibility\n        ) : null\n\n        return (\n            <Card className={classes.card}>\n                <CardMedia\n                    image={userImage}\n                    title=\"Profile image\" className={classes.image}\n                />\n                <CardContent className={classes.content}>\n                    <Typography\n                        variant=\"h5\"\n                        component={Link}\n                        to={`/users/${userHandle}`}\n                        color='inherit'>\n                            {userHandle}\n                    </Typography>\n\n                    {/* Delete Button */}\n                    {deleteButton}\n\n                    {/* CreateAt */}\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\">\n                            {dayjs(createdAt).fromNow()}\n                    </Typography>\n\n                    {/* Content */}\n                    <Typography\n                        variant=\"body1\">\n                            {body}\n                    </Typography>\n\n                    {/* Like button */}\n                    <LikeButton\n                        screamId={screamId}\n                    />\n                    <span style={{paddingRight: \"10px\"}}>{likeCount} Likes</span>\n\n                    {/* Comments */}\n                        <ScreamDialog\n                        screamId={screamId}\n                        userHandle={userHandle}\n                        openDialog={this.props.openDialog}\n                        />\n                    <span>{commentCount} comments</span>\n\n                    {/* Open scream dialogue */}\n                    <Link to={`/users/${userHandle}/scream/${screamId}`} >\n                        <CustomButton\n                            tip=\"Expand\"\n                            tipClassName={classes.expandButton}>\n                                <UnfoldMoreIcon color=\"primary\" />\n                        </CustomButton>\n                    </Link>\n                </CardContent>\n            </Card>\n        )\n    }\n}\n\nScreams.propTypes = {\n    user: PropTypes.object.isRequired,\n    scream: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n    openDialog: PropTypes.bool\n}\n\n\nconst mapStateToProps = state => ({\n    user: state.user\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Screams));\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CustomButton from '../../util/CustomBotton';\n\n// Redux tings\nimport { connect } from 'react-redux';\nimport { editUserData } from '../../redux/actions/userActions';\n\n// MUI tings\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n// Icon\nimport EditIcon from '@material-ui/icons/Edit'\n\n\nconst styles = theme => ({\n    ...theme.spreadThis,\n    button: {\n        float: \"right\"\n    }\n});\n\nclass EditDetails extends Component {\n    state = {\n        bio: '',\n        website: '',\n        location: '',\n        open: false // Dialogue\n    };\n\n    mapUserDataToState = (credentials) => {\n        this.setState({\n            bio: credentials.bio ? credentials.bio : '',\n            website: credentials.website ? credentials.website : '',\n            location: credentials.location ? credentials.location : ''\n        });\n    };\n\n    handleOpen = () => {\n        this.setState({ open: true });\n        this.mapUserDataToState(this.props.credentials);\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    componentDidMount(){\n        const { credentials } = this.props;\n        this.mapUserDataToState(credentials);\n\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    handleSubmit = () => {\n        const userData = {\n            bio: this.state.bio,\n            website: this.state.website,\n            location: this.state.location,\n        };\n        this.props.editUserData(userData);\n        this.handleClose();\n    }\n\n    render() {\n        const { classes } = this.props\n        return (\n            <Fragment>\n                <CustomButton tip=\"Edit Details\" onClick={this.handleOpen} btnClassName={classes.button}>\n                    <EditIcon color=\"primary\" />\n                </CustomButton>\n\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth\n                    maxWidth=\"sm\">\n                        <DialogTitle>Edit Details</DialogTitle>\n                        <DialogContent>\n                            <form>\n                                <TextField\n                                    name='bio'\n                                    type='text'\n                                    label='Bio'\n                                    multiline\n                                    rows=\"3\"\n                                    placeholder=\"Gimme a bio\"\n                                    className={classes.TextField}\n                                    value={this.state.bio}\n                                    onChange={this.handleChange}\n                                    fullWidth/>\n                                <TextField\n                                    name='website'\n                                    type='text'\n                                    label='Website'\n                                    placeholder=\"Personal website\"\n                                    className={classes.TextField}\n                                    value={this.state.website}\n                                    onChange={this.handleChange}\n                                    fullWidth/>\n                                <TextField\n                                    name='location'\n                                    type='text'\n                                    label='Location'\n                                    placeholder=\"Toss the addy\"\n                                    className={classes.TextField}\n                                    value={this.state.location}\n                                    onChange={this.handleChange}\n                                    fullWidth/>\n                            </form>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={this.handleSubmit} color=\"primary\">\n                                Save\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    credentials: state.user.credentials\n});\n\nEditDetails.propTypes = {\n    editUserData: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapStateToProps, { editUserData })(withStyles(styles)(EditDetails));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport blankMans from '../images/blank_mans.png';\n\n// MUI\nimport Paper from '@material-ui/core/Paper';\n// Icons\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport LinkIcon from '@material-ui/icons/Link';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\n\nconst styles = theme => ({\n    ...theme.spreadThis,\n    handle: {\n        height: 20,\n        backgroundColor: theme.palette.primary.main,\n        width: 60,\n        margin: '0px auto 7px auto',\n    },\n    fullLine: {\n        height: 15,\n        backgroundColor: 'rgba(0,0,0,0.6)',\n        width: '100%',\n        marginBottom: 10,\n    },\n    halfLine: {\n        height: 15,\n        backgroundColor: 'rgba(0,0,0,0.6)',\n        width: '50%',\n        marginBottom: 10,\n    }\n});\n\nconst ProfileSkeleton = (props) => {\n    const { classes } = props;\n    return (\n        <Paper className={classes.paper}>\n            <div className={classes.profile}>\n                {/* Profile Image */}\n                <div className=\"image-wrapper\">\n                    <img src={blankMans} alt=\"profile\" className=\"profile-image\" />\n                </div>\n                    <hr />\n                    {/* Profile details */}\n                <div className=\"profile-details\">\n                    {/* Empty full line */}\n                    <div className={classes.handle} />\n                        <hr />\n                    {/* Empty half line */}\n                    <div className={classes.fullLine} />\n                    <div className={classes.fullLine} />\n                        <hr />\n                    {/* Location */}\n                    <LocationOnIcon color='primary' />\n                    <span>Location</span>\n                        <hr />\n                    {/* Website */}\n                    <LinkIcon color='primary' /> https://website.com\n                        <hr />\n                    {/* Calendar */}\n                    <CalendarTodayIcon color=\"primary\" /> Joined Date\n                </div>\n            </div>\n        </Paper>\n    );\n};\n\nProfileSkeleton.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ProfileSkeleton);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport EditDetails from './EditDetails';\nimport CustomBotton from '../../util/CustomBotton';\nimport ProfileSkeleton from '../../util/ProfileSkeleton';\n\n// MUI tings\nimport Button from '@material-ui/core/Button';\nimport Paper  from '@material-ui/core/Paper';\nimport MLink from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\n// Icons\nimport LocationOn from '@material-ui/icons/LocationOn';\nimport LinkIcon from '@material-ui/icons/Link';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport EditIcon from '@material-ui/icons/Edit';\nimport KeyboardReturn from '@material-ui/icons/KeyboardReturn';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { logoutUser, uploadImage } from '../../redux/actions/userActions';\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  });\n\n\n\nclass Profile extends Component {\n    handleImageChange = (e) => {\n        const profilePic = e.target.files[0];\n        // Sned image to server\n        const formData = new FormData();\n        formData.append('profilePic', profilePic, profilePic.name);\n        this.props.uploadImage(formData);\n    };\n    handlePictureEdit = () => {\n        const fileInput = document.getElementById('profile_image');\n        fileInput.click();\n    };\n    handleLogout = () => {\n      this.props.logoutUser();\n    }\n    render() {\n        const {\n            classes,\n            user: {\n                 credentials: { handle, createAt, imageUrl, bio, website, location },\n                loading, // When profile loading, preivew loading skeleton\n                authenticated\n            }\n        } = this.props\n\n        let profileMarkup = !loading ? (authenticated ? (\n            <Paper className={classes.paper}>\n                <div className={classes.profile}>\n                    <div className=\"image-wrapper\">\n                        <img src={imageUrl} alt=\"profile\" className=\"profile-image\"/>\n                        <input\n                            type='file'\n                            id='profile_image'\n                            hidden='hidden'\n                            onChange={this.handleImageChange}\n                        />\n\n                        <CustomBotton\n                          tip='Edit Profile Picture'\n                          onClick={this.handlePictureEdit}\n                          btnClassName='button'>\n                            <EditIcon color=\"primary\"  />\n                        </CustomBotton>\n\n                    </div><hr />\n                    <div className=\"profile-details\">\n            <MLink component={Link} to={`/users/${handle}`} color=\"primary\" variant=\"h5\">\n                @{handle}\n            </MLink><hr />\n            {bio && <Typography variant=\"body2\">{bio}</Typography>}<hr />\n            {location && (\n                <Fragment>\n                    <LocationOn color=\"primary\"/> <span>{location}</span><hr />\n                </Fragment>\n            )}\n            {website && (\n                <Fragment>\n                    <LinkIcon color=\"primary\" />\n                        <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                            {' '}{website}\n                        </a><hr />\n                </Fragment>\n            )}\n            <CalendarTodayIcon color=\"primary\" />{' '}\n            <span>Joined {dayjs(createAt).format('MMM YYYY')}</span>\n                    </div>\n\n                <CustomBotton tip='Logout'\n                          onClick={this.handleLogout}>\n                            <KeyboardReturn color=\"primary\"  />\n                </CustomBotton>\n\n                <EditDetails />\n                </div>\n            </Paper>\n        ) : (\n            <Paper className={classes.paper}>\n                <Typography variant=\"body2\" align=\"center\" >\n                    No profile Found, Try again\n                </Typography>\n                <div className={classes.buttons}>\n                    <Button variant=\"contained\" color=\"primary\" component={Link} to='/login'>\n                        Login\n                    </Button>\n                    <Button variant=\"contained\" color=\"secondary\" component={Link} to='/signup'>\n                        Sign Up\n                    </Button>\n                </div>\n            </Paper>\n        )) : <ProfileSkeleton /> // Load the profile skeleton if everything fails (loading)\n\n        return profileMarkup;\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user\n});\n\nconst mapActionsToProps = {\n    logoutUser,\n    uploadImage\n};\n\nProfile.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  uploadImage: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Profile));\n","import React, { Fragment } from 'react';\nimport blankMans from '../images/blank_mans.png';\nimport PropTypes from 'prop-types';\n\n// MUI tings\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n    ...theme.spreadThis,\n    card: {\n        display: 'flex',\n        marginBottom: 20,\n    },\n    cardContent: {\n        width: '100%',\n        flexDirection: 'column', // so they stack on each other\n        padding: 25\n    },\n    cover: {\n        maxWidth: '22%',\n    },\n    handle: {\n        width: 60,\n        height: 18,\n        backgroundColor: theme.palette.primary.main,\n        marginBottom:10\n    },\n    image: {\n        width: '100%',\n        overflow: 'hidden',\n    },\n    date: {\n        height: 15,\n        width: 100,\n        backgroundColor: 'rgba(0,0,0,0.3)',\n        marginBottom: 10\n\n    },\n    fullLine: {\n        height:15,\n        width: '90%',\n        backgroundColor: 'rgba(0,0,0,0.6)',\n        marginBottom: 10\n    },\n    halfLine: {\n        height:15,\n        width: '50%',\n        backgroundColor: 'rgba(0,0,0,0.6)',\n        marginBottom: 10\n    }\n});\n\nconst ScreamSkeleton = (props) => {\n    const { classes } = props;\n\n    const content = Array.from({ length: 5}).map((item, index) => ( // item not needed (max 5 empty bodys)\n        <Card className={classes.card} key={index}>\n            <CardMedia className={classes.cover}>\n                <img src={blankMans} alt=\"blank mans\" className={classes.image} />\n            </CardMedia>\n            <CardContent className={classes.cardContent}>\n                <div className={classes.handle} />\n                <div className={classes.date} />\n                <div className={classes.fullLine} />\n                <div className={classes.fullLine} />\n                <div className={classes.halfLine} />\n            </CardContent>\n        </Card>\n    ))\n\n    return <Fragment>{content}</Fragment>\n}\n\nScreamSkeleton.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ScreamSkeleton);\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\n\nimport Scream from '../components/Scream/Screams';\nimport Profile from '../components/Profile/Profile';\nimport ScreamSkeleton from '../util/ScreamSkeleton';\n\nimport { connect } from 'react-redux';\nimport { getScreams } from '../redux/actions/dataActions';\n\nclass home extends Component {\n    componentDidMount() {\n        this.props.getScreams();\n    }\n    render() {\n        const { screams, loading } = this.props.data // from data\n\n        let recentScreamsMarkup = !loading ? ( // If not loading, show screams\n            screams.map((scream) =>\n                <Scream\n                    key={scream.screamId}\n                    scream={scream}\n                />)\n        ) : (\n            <ScreamSkeleton /> // Show the skeleton if page still loading\n        );\n        return (\n            <Grid container spacing={3}>\n                <Grid item sm={8} xs={12}>\n                    {recentScreamsMarkup}\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                    <Profile />\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nhome.propTypes = {\n    getScreams: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired // contains screams and loading\n}\n\nconst mapStateToProps = (state) => ({ // data reducer puts data in the obj\n    data: state.data\n})\n\n\nexport default connect(mapStateToProps, { getScreams })(home);\n","import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types'; // Prop types (type checking)\nimport sixGod from '../images/6-god.png'\nimport { Link } from 'react-router-dom';\n\n// MUI tings\nimport Grid from '@material-ui/core/Grid';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n// Redux tings\nimport { connect } from 'react-redux';\nimport { loginUser } from '../redux/actions/userActions'\n\nconst styles = theme => ({\n    ...theme.spreadThis\n});\n\n\nclass login extends Component {\n    constructor(){\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            errors: {}\n        };\n    };\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.UI.errors) {\n            this.setState({\n                errors: nextProps.UI.errors\n            });\n        };\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        this.props.loginUser(userData, this.props.history); // redirects on success\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value // Change char per char\n        });\n    };\n\n    render() {\n        const { classes, UI: { loading } } = this.props; // destructutre\n        const { errors } = this.state;\n        return (\n            <Grid container // outter grid to space in middle\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n                className={classes.form}>\n                    {/* Inner grid for content */}\n                    <Grid item sm={4}>\n                        <img src={sixGod} alt=\"6 mans\" className={classes.image} />\n                        <Typography variant=\"h2\" className={classes.pageTitle}>\n                            Login\n                        </Typography>\n                        <form noValidate onSubmit={this.handleSubmit}>\n                            <TextField\n                                id=\"email\"\n                                name=\"email\"\n                                type=\"mail\"\n                                label=\"Email\"\n                                className={classes.TextField}\n                                helperText={errors.email} // Display the errors\n                                error={ errors.email ? true : false }\n                                value={this.state.email}\n                                onChange={this.handleChange}\n                                fullWidth />\n                            <TextField\n                                id=\"password\"\n                                name=\"password\"\n                                type=\"password\"\n                                label=\"Password\"\n                                className={classes.TextField}\n                                helperText={errors.password} // Display the errors\n                                error={ errors.password ? true : false }\n                                value={this.state.password}\n                                onChange={this.handleChange}\n                                fullWidth />\n                                {/* Display errors */}\n                            {errors.general && (\n                                <Typography variant=\"body2\" className={classes.LoginError}>\n                                    {errors.general}\n                                </Typography>\n                            )}\n                            {/* Submit button */}\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.button}\n                                disabled={loading}>\n                                    Login\n                                    {/* Loading circle when logging in */}\n                                    {loading &&\n                                        <CircularProgress size={30} className={classes.loading} />}\n                            </Button>\n                            <br />\n                            <small>\n                                Sign Up <Link to=\"/signup\">Here</Link>\n                            </small>\n                        </form>\n                    </Grid>\n\n            </Grid>\n        );\n    };\n};\n\nlogin.propTypes = { // All added to props\n    classes: PropTypes.object.isRequired,\n    loginUser: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired\n};\n\n// Props\nconst mapStateToProps = (state) => ({\n    // Access objects from redux state\n    user: state.user,\n    UI: state.UI\n});\n\nconst mapActionsToProps = {\n    loginUser\n}; // what actions we're going to use\n\n// export component that need access to change Redux state.\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(login));\n","import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types'; // Prop types (type checking)\nimport sixGod from '../images/6-god.png'\n\n// MUI tings\nimport Grid from '@material-ui/core/Grid';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Redux tings\nimport { connect } from 'react-redux';\nimport { signupUser } from '../redux/actions/userActions';\n\nconst styles = theme => ({\n    ...theme.spreadThis\n});\n\n\nclass signup extends Component {\n    constructor(){\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            confirmPassword: '',\n            handle: '',\n            errors: {}\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.UI.errors) {\n            this.setState({ errors: nextProps.UI.errors });\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.setState({\n            loading: true\n        });\n        const newUserData = {\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n            handle: this.state.handle\n        }\n        this.props.signupUser((newUserData), this.props.history);\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    render() {\n        const { classes, UI: { loading } } = this.props; // destructutre\n        const { errors } = this.state;\n        const Link = require(\"react-router-dom\").Link;\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm>\n                    <img src={sixGod} alt=\"6 mans\" className={classes.image} />\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\n                         Sign Up\n                    </Typography>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField\n                            id=\"email\"\n                            name=\"email\"\n                            type=\"mail\"\n                            label=\"Email\"\n                            className={classes.TextField}\n                            helperText={errors.email} // Display the errors\n                            error={ errors.email ? true : false }\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                            fullWidth />\n                        <TextField\n                            id=\"password\"\n                            name=\"password\"\n                            type=\"password\"\n                            label=\"Password\"\n                            className={classes.TextField}\n                            helperText={errors.password} // Display the errors\n                            error={ errors.password ? true : false }\n                            value={this.state.password}\n                            onChange={this.handleChange}\n                            fullWidth />\n                        <TextField\n                            id=\"confirmPassword\"\n                            name=\"confirmPassword\"\n                            type=\"password\"\n                            label=\"Confirm Password\"\n                            className={classes.TextField}\n                            helperText={errors.confirmPassword} // Display the errors\n                            error={ errors.confirmPassword ? true : false }\n                            value={this.state.confirmPassword}\n                            onChange={this.handleChange}\n                            fullWidth />\n                        <TextField\n                            id=\"handle\"\n                            name=\"handle\"\n                            type=\"text\"\n                            label=\"Handle\"\n                            className={classes.TextField}\n                            helperText={errors.handle} // Display the errors\n                            error={ errors.handle ? true : false }\n                            value={this.state.handle}\n                            onChange={this.handleChange}\n                            fullWidth />\n                        {errors.general && (\n                            <Typography variant=\"body2\" className={classes.LoginError}>\n                                {errors.general}\n                            </Typography>\n                        )}\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            disabled={loading}>\n                                Sign Up\n                                {loading &&\n                                    <CircularProgress size={30} className={classes.loading} />}\n                        </Button>\n                        <br />\n                        {/* Create an account form */}\n                        <small>\n                            Have an account? Login <Link to=\"/login\">Here</Link>\n                        </small>\n                    </form>\n                </Grid>\n                <Grid item sm/>\n            </Grid>\n        );\n    }\n}\n\nsignup.propTypes = {\n    classes: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n    logoutUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n})\nexport default connect(mapStateToProps, { signupUser })(withStyles(styles)(signup));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\n\n// MUI tings\nimport  MUILink from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\n// Icons\nimport LocationOn from '@material-ui/icons/LocationOn';\nimport LinkIcon from '@material-ui/icons/Link';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\n\nconst styles = (theme) => ({\n  ...theme.spreadThis\n  });\n\nconst StaticProfile = (props) => {\n    const {\n        classes,\n        profile: {\n            handle,\n            createdAt,\n            imageUrl,\n            bio,\n            website,\n            location }\n        } = props\n\n        return (\n            <Paper className={classes.paper}>\n            <div className={classes.profile}>\n                <div className=\"image-wrapper\">\n                    <img src={imageUrl} alt=\"profile\" className=\"profile-image\"/>\n                </div><hr />\n                <div className=\"profile-details\">\n        <MUILink component={Link} to={`/users/${handle}`} color=\"primary\" variant=\"h5\">\n            @{handle}\n        </MUILink><hr />\n        {bio && <Typography variant=\"body2\">{bio}</Typography>}<hr />\n        {location && (\n            <Fragment>\n                <LocationOn color=\"primary\"/> <span>{location}</span><hr />\n            </Fragment>\n        )}\n        {website && (\n            <Fragment>\n                <LinkIcon color=\"primary\" />\n                    <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {' '}{website}\n                    </a><hr />\n            </Fragment>\n        )}\n        <CalendarTodayIcon color=\"primary\" />{' '}\n        <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\n                </div>\n            </div>\n        </Paper>\n\n        )\n\n}\n\nStaticProfile.prototypes = {\n    profile: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n}\n\n\nexport default withStyles(styles)(StaticProfile)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Screams from '../components/Scream/Screams';\nimport Grid from '@material-ui/core/Grid';\nimport StaticProfile from '../components/Profile/StaticProfile';\nimport Scream from '../components/Scream/Screams';\n\nimport { connect } from 'react-redux';\nimport { getUserData } from '../redux/actions/dataActions';\n\nimport ScreamSkeleton from '../util/ScreamSkeleton';\nimport ProfileSkeleton from '../util/ProfileSkeleton';\n\nclass users extends Component {\n    state = { // Data\n        profile: null,\n        screamIdParam: null\n    };\n    componentDidMount() {\n        const handle = this.props.match.params.handle; // Get handle from URL ('/user/:handle')\n        const screamId = this.props.match.params.screamId; // Get screamId from URL\n        if (screamId) { // If we get a screamId, set it to paramss\n            this.setState({ screamIdParam: screamId })\n        };\n        this.props.getUserData(handle);\n\n        axios.get(`/user/${handle}`) // getUserDetails\n            .then(res => {\n                this.setState({\n                    profile: res.data.user // Add the response data into profile\n                })\n            })\n            .catch(err => console.log(err));\n\n    };\n    render() {\n        const { screams, loading } = this.props.data;\n        const { screamIdParam } = this.state;\n\n        const screamsMarkup = loading ? (\n            <ScreamSkeleton /> // If loading, display the skeleton\n            // Havent posted anything\n        ) : screams === null ? (\n            <p>This mans hasn't posted anything yet</p>\n            // H\n        ) : !screamIdParam  ? (\n            screams.map(scream => <Screams key={scream.screamId} scream={scream} />)\n        ) : ( // trying to visit scream\n            screams.map(scream => {\n                if (scream.screamId !== screamIdParam) {\n                    return <Scream key={scream.screamId} scream={scream} />\n                } else {\n                    return <Scream key={scream.screamId} scream={scream} openDialog />\n                }\n            })\n        );\n        return (\n            <Grid container spacing={3}>\n                <Grid item sm={8} xs={12}>\n                    {screamsMarkup}\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                    {this.state.profile === null ? (\n                        <ProfileSkeleton /> // If there are no profiles ==> load skeleton\n                    ) :  (\n                        <StaticProfile profile={this.state.profile} /> // load the profiles\n                    )}\n                </Grid>\n            </Grid>\n            );\n        };\n    };\n\nusers.propTypes = {\n    getUserData: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    data: state.data\n});\n\nexport default connect(mapStateToProps, {getUserData})(users);\n","import React, { Component } from 'react';\nimport{ BrowserRouter as Router , Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport jwtDecode from 'jwt-decode';\nimport axios from 'axios';\n\n\n// Redux\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport { SET_AUTHENTICATED } from './redux/types';\nimport { logoutUser, getUserData } from './redux/actions/userActions';\n\n// Components\nimport NavBar from './components/Layout/Navbar';\nimport AuthRoute from './util/AuthRoute';\nimport themeFile from './util/theme';\n\n\n//Pages\nimport home from './pages/home';\nimport login from './pages/login';\nimport signup from './pages/signup';\nimport user from './pages/users';\n\nconst theme = createMuiTheme(themeFile);\n\naxios.defaults.baseURL = \"https://us-central1-wagwan-6797c.cloudfunctions.net/api\";\n\n// Get token\n\nconst token = localStorage.FBIdToken;\nif (token){\n  const decodedToken = jwtDecode(token);\n  if (decodedToken.exp * 1000 < Date.now()) { // The token expired (in seconds)\n    store.dispatch(logoutUser()); // Will remove token and logout\n    window.location.href = '/login'; // go back to login page\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData());\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n            <Router>\n            <NavBar />\n              <div className='container'>\n                <Switch>\n                  <Route exact path=\"/\" component={home} />\n                  <AuthRoute exact path=\"/login\" component={login} />\n                  <AuthRoute exact path=\"/signup\" component={signup} />\n                  <Route exact path=\"/users/:handle\" component={user} />\n                  <Route exact path=\"/users/:handle/scream/:screamId\" component={user} />\n                </Switch>\n              </div>\n            </Router>\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","export default {\n    palette: {\n      primary: {\n        light: '#ffffff',\n        main: '#b3e5fc',\n        dark: '#c7c7c7',\n        contrastText: '#000',\n      },\n      secondary: {\n        light: '#63a4ff',\n        main: '#1976d2',\n        dark: '#004ba0',\n        contrastText: '#fff',\n      }\n    },\n    typography: {\n      useNextVariants: true\n    },\n\n    spreadThis: {\n      form: {\n        textAlign: 'center'\n      },\n      image: {\n          height: 60,\n          margin: '20px auto 10px auto'\n      },\n      pageTitle: {\n          margin: '10px auto 10px auto'\n      },\n      TextField: {\n          margin: '10px auto 10px auto'\n      },\n      button: {\n          marginTop: 20,\n          position: 'relative'\n      },\n      LoginError: {\n          color: 'red',\n          fontSize: '12px',\n          marginTop: '10px'\n      },\n      loading: {\n          position: 'absolute'\n      },\n      invisibleSep: {\n        border: 'none',\n        margin: 4\n      },\n      visibleSep: {\n        width: '100%',\n        borderBottom: '1px solid rgba(0,0,0,0,0.1)',\n        marginBottom: '5px'\n      },\n      paper: {\n        padding: 20\n      },\n      profile: {\n        '& .image-wrapper': {\n          textAlign: 'center',\n          position: 'relative',\n          '& button': {\n            position: 'absolute',\n            top: '80%',\n            left: '70%'\n          }\n        },\n        '& .profile-image': {\n          width: 200,\n          height: 200,\n          objectFit: 'cover',\n          maxWidth: '100%',\n          borderRadius: '50%'\n        },\n        '& .profile-details': {\n          textAlign: 'center',\n          '& span, svg': {\n            verticalAlign: 'middle'\n          },\n          '& a': {\n            color: \"#b3e5fc\"\n          }\n        },\n        '& hr': {\n          border: 'none',\n          margin: '0 0 10px 0'\n        },\n        '& svg.button': {\n          '&:hover': {\n            cursor: 'pointer'\n          }\n        }\n      },\n      buttons: {\n        textAlign: 'center',\n        '& a': {\n          margin: '20px 10px'\n        }\n      },\n      commentImage: {\n        maxWidth: '100%',\n        height: 100,\n        objectFit: 'cover',\n        borderRadius: '50%'\n    },\n    commentData: {\n        marginLeft: 20\n    },\n    submitButton: {\n      position: 'relative',\n      margin: '20px auto 10px auto',\n      float: \"right\"\n  },\n  progrssSpinner: {\n      position: 'absolute'\n  },\n  closeButton: {\n      position: 'absolute',\n      left: '92%',\n      top: '3%'\n  },\nprofileImage: {\n    maxWidth: 200,\n    height: 200,\n    borderRadius: '50%',\n    objectFit: 'cover'\n},\nDialogContent: {\n    padding: 20\n},\nexpandButton: {\n    position: 'absolute',\n    left: '92%'\n},\nspinner: {\n    textAlign: 'center',\n    marginTop: 50,\n    marginBottom: 50,\n\n}\n    }\n  }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/blank_mans.ae18a9e6.png\";","module.exports = __webpack_public_path__ + \"static/media/6-god.b8bbf038.png\";"],"sourceRoot":""}