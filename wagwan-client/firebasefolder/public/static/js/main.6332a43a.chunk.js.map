{"version":3,"sources":["redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","redux/types.js","redux/actions/userActions.js","util/CustomBotton.js","redux/actions/dataActions.js","components/Scream/PostScream.js","components/Layout/Notifications.js","components/Layout/Navbar.js","util/AuthRoute.js","components/Scream/DeleteScream.js","components/Profile/LikeButton.js","components/Scream/Comments.js","components/Scream/CommentForm.js","components/Scream/screamDialog.js","components/Scream/Screams.js","components/Profile/EditDetails.js","util/ProfileSkeleton.js","components/Profile/Profile.js","util/ScreamSkeleton.js","pages/home.js","pages/login.js","pages/signup.js","components/Profile/StaticProfile.js","pages/users.js","pages/reset.js","App.js","util/theme.js","serviceWorker.js","index.js","images/6-god.png","images/blank_mans.png"],"names":["initialState","athenticated","loading","credentials","likes","notifications","screams","scream","errors","middleWare","thunk","reducer","combineReducers","user","state","action","type","authenticated","payload","userHandle","handle","screamId","filter","like","forEach","not","read","data","index","findIndex","splice","comments","UI","store","createStore","compose","applyMiddleware","logoutUser","dispatch","localStorage","removeItem","axios","defaults","headers","common","getUserData","get","then","res","catch","err","console","log","setAuthHeader","token","FBIdToken","setItem","children","tip","onClick","btnClassName","tipClassName","styles","Tooltip","title","className","placement","IconButton","style","clearErrors","PostScream","open","body","handleOpen","setState","handleClose","props","handleChange","e","target","name","value","handleSubmit","preventDefault","postScream","nextProps","this","classes","color","id","Dialog","onClose","fullWidth","closeButton","DialogContent","DialogTitle","paddingLeft","onSubmit","TextField","label","multiline","rows","placeholder","error","helperText","textField","onChange","Button","variant","submitButton","disabled","CircularProgress","size","progrssSpinner","Component","Prototype","PropTypes","func","isRequired","object","connect","newScream","post","response","withStyles","theme","spreadThis","Notifications","anchorEl","onMenuOpened","unreadNotificationsId","map","notificationsId","markNotificationsRead","notificationsIcon","dayjs","extend","relativeTime","length","Badge","badgeContent","notificationsMarkUp","verb","time","createdAt","fromNow","iconColor","icon","marginRight","MenuItem","key","Math","random","Typography","component","Link","to","recipient","sender","aria-owns","undefined","aria-haspopup","Menu","Boolean","onEntered","notificationsIds","Navbar","AppBar","Toolbar","Grid","container","direction","justify","alignItems","width","textDecoration","src","sixGod","alt","borderRight","height","padding","marginLeft","CustomBotton","rest","render","DeleteScream","deleteScream","deleteButton","maxWidth","DialogActions","delete","left","position","top","LikeButton","likedScream","find","likeScream","unlikeScream","likeButton","mapActionsToProps","Comments","comment","userImage","item","sm","commentImage","commentData","format","invisibleSep","visibleSep","CommentForm","submitComment","textAlign","button","ScreamDialog","oldPath","newPAth","getScream","window","location","pathname","newPath","history","pushState","openDialog","likeCount","commentCount","dialogMarkUp","spinner","thickness","spacing","profileImage","commentButton","dialogContent","Screams","Card","card","CardMedia","image","CardContent","content","paddingRight","expandButton","marginBottom","display","minWidth","objectFit","EditDetails","bio","website","mapUserDataToState","userData","editUserData","float","backgroundColor","palette","primary","main","margin","fullLine","halfLine","Paper","paper","profile","blankMans","Profile","handleImageChange","profilePic","files","formData","FormData","append","uploadImage","handlePictureEdit","document","getElementById","click","handleLogout","createAt","imageUrl","hidden","href","rel","align","buttons","cardContent","flexDirection","cover","overflow","date","Array","from","home","getScreams","recentScreamsMarkup","xs","login","email","password","loginUser","form","pageTitle","noValidate","general","LoginError","fontSize","push","signup","newUserData","confirmPassword","signupUser","require","StaticProfile","prototypes","users","screamIdParam","match","params","screamsMarkup","reset","resetPass","displayResetPassword","createMuiTheme","light","dark","contrastText","secondary","typography","useNextVariants","marginTop","border","borderBottom","borderRadius","verticalAlign","cursor","baseURL","jwtDecode","exp","Date","now","App","exact","path","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6332a43a.chunk.js","sourcesContent":["import {\n    SET_USER,\n    SET_AUTHENTICATED,\n    SET_UNAUTHENTICATED,\n    LOADING_USER,\n    LIKE_SCREAM,\n    UNLIKE_SCREAM,\n    MARK_NOTIFICATIONS\n} from '../types';\n\nconst initialState = { // userReducer\n    athenticated: false,\n    loading: false,\n    credentials: {},\n    likes: [],\n    notifications: []\n};\n\nexport default function(state = initialState, action) { // Takes action and initial state\n    switch(action.type){\n        // If any of the  states change\n        case SET_AUTHENTICATED:\n            return {\n                ...state,\n                authenticated: true\n            };\n            case SET_UNAUTHENTICATED:\n                return initialState;\n            case SET_USER:\n                return {\n                    authenticated: true, // We got user data\n                    loading: false,\n                    ...action.payload\n                };\n            case LOADING_USER:\n                return {\n                    ...state,\n                    loading: true\n                };\n            case LIKE_SCREAM:\n                return {\n                    ...state,\n                    likes: [\n                        ...state.likes,\n                        { // add new like\n                            userHandle: state.credentials.handle,\n                            screamId: action.payload.screamId\n                        }\n                    ]\n                }\n            case UNLIKE_SCREAM:\n                return { // remove the like and user\n                    ...state,\n                    likes: state.likes.filter(like => like.screamId !== action.payload.screamId)\n                }\n            case MARK_NOTIFICATIONS:\n                state.notifications.forEach(not => not.read = true);\n                return {\n                    ...state\n                }\n\n                default:\n                    return state;\n    }\n}\n","import {\n    SET_SCREAMS,\n    LIKE_SCREAM,\n    UNLIKE_SCREAM,\n    LOADING_DATA,\n    POST_SCREAM,\n    DELETE_SCREAM,\n    SET_SCREAM,\n    SUBMIT_COMMENT\n} from '../types';\n\nconst initialState = {\n    screams: [], // array holding all screams\n    scream: {}, // details of one scream\n    loading: false,\n};\n\nexport default function(state = initialState, action){\n    switch(action.type) {\n        case LOADING_DATA:\n            return {\n                ...state,\n                loading: true\n            }\n        case SET_SCREAMS:\n            return {\n                ...state,\n                screams: action.payload,\n                loading: false\n            }\n        case LIKE_SCREAM:\n        case UNLIKE_SCREAM:\n            // Add like to array of user like and increment like\n            let index = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId); // screamId same as payload\n            state.screams[index] = action.payload; // replace it in the state\n            // check scream stored in singular scream obj has same Id, liked the scream opened\n            if (state.scream.screamId === action.payload.screamId) {\n                state.scream = action.payload;\n            }\n            return {\n                ...state\n            };\n        case DELETE_SCREAM:\n            // find the index of scream and remove it from screams array\n            index = state.screams.findIndex(scream => scream.screamId === action.payload);\n            state.screams.splice(index, 1); // remove 1 element at array[index]\n            return {\n                ...state\n            };\n        case POST_SCREAM:\n            // need to add it to screams array\n            return {\n                ...state,\n                screams: [\n                    action.payload, // add new screams to top\n                    ...state.screams // spread the old screams\n                ]\n            };\n        case SET_SCREAM:\n            return {\n                ...state,\n                scream: action.payload\n            };\n        case SUBMIT_COMMENT:\n            return {\n                ...state,\n                scream: { // Add to top\n                    ...state.scream,\n                    comments: [action.payload, ...state.scream.comments]\n                }\n            }\n        default:\n            return state;\n\n    }\n}\n","import {\n    SET_ERRORS,\n    CLEAR_ERRORS,\n    LOADING_UI,\n    STOP_LOADING_UI\n} from '../types';\n\nconst initialState = {\n    loading: false,\n    errors: null\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type){\n        case SET_ERRORS:\n            return {\n                ...state,\n                loading: false,\n                errors: action.payload\n            };\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                loading: false,\n                errors: null\n            };\n        case LOADING_UI:\n            return {\n                ...state,\n                loading: true\n            };\n        case STOP_LOADING_UI:\n            return {\n                ...state,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}\n","import { // Import all the reducers to combine em\n    createStore,\n    combineReducers,\n    applyMiddleware,\n    compose\n } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport userReducer from './reducers/userReducer';\nimport dataReducer from './reducers/dataReducer';\nimport uiReducer from './reducers/uiReducer';\n\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst reducer = combineReducers({\n    user: userReducer,\n    data: dataReducer,\n    UI: uiReducer\n});\n\nconst store = createStore(reducer, initialState,  compose(applyMiddleware(...middleWare)));\n\nexport default store;\n","// DEFINE ACTIONS (one object per action)\n\n// user reducer types\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\nexport const SET_USER = 'SET_USER';\nexport const LOADING_USER = 'LOADING_USER';\nexport const MARK_NOTIFICATIONS = 'MARK_NOTIFICATIONS';\n\n// UI reducer types\nexport const SET_ERRORS = 'SET_ERRORS';\nexport const LOADING_UI = 'LOADING_UI';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const LOADING_DATA = 'LOADING_DATA';\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\n\n\n// Data reducer types\nexport const SET_SCREAMS = 'SET_SCREAMS';\nexport const SET_SCREAM = 'SET_SCREAM';\nexport const LIKE_SCREAM = 'LIKE_SCREAM';\nexport const UNLIKE_SCREAM = 'UNLIKE_SCREAM';\nexport const DELETE_SCREAM = 'DELETE_SCREAM';\nexport const POST_SCREAM = 'POST_SCREAM';\nexport const SUBMIT_COMMENT = 'SUBMIT_COMMENT';\n","import {\n    SET_USER,\n    SET_ERRORS,\n    CLEAR_ERRORS,\n    LOADING_UI,\n    SET_UNAUTHENTICATED,\n    LOADING_USER,\n    MARK_NOTIFICATIONS\n} from '../types';\nimport axios from 'axios';\n\nexport const loginUser = ( userData, history ) => (dispatch) => { // Need dispatch becuase asynchronous code\n    dispatch({ type: LOADING_UI }); // Link method component to action (userData to Loading UI)\n    axios\n        .post('/login', userData )\n            .then(response => {\n                setAuthHeader(response.data.token)\n\n                dispatch(getUserData());\n                dispatch({ type: CLEAR_ERRORS }); // If not errors, we can redirect\n                history.push('/'); // Push state in url and go to it (redirect to home page)\n            })\n            .catch(err => {\n                dispatch({\n                    type: SET_ERRORS,\n                    payload: err.response.data\n                });\n            });\n}\n\n// Almost same as Login\nexport const signupUser = ( newUserData, history ) => (dispatch) => { // Need dispatch becuase asynchronous code\n    dispatch({ type: LOADING_UI }); // Link method component to action (newUserData to Loading UI)\n    axios\n        .post('/signup', newUserData )\n            .then(response => {\n                setAuthHeader(response.data.token)\n\n                dispatch(getUserData());\n                dispatch({ type: CLEAR_ERRORS }); // If not errors, we can redirect\n                history.push('/'); // Push state in url and go to it (redirect to home page)\n            })\n            .catch(err => {\n                dispatch({\n                    type: SET_ERRORS,\n                    payload: err.response.data\n                });\n            });\n}\n\n// Log user out\nexport const logoutUser = () => (dispatch) => {\n    localStorage.removeItem('FBIdToken'); // Remove token from local storage\n    delete axios.defaults.headers.common['Authorization']; // Delete entry (removes the auth header)\n    dispatch({ type: SET_UNAUTHENTICATED }); // Will clear user state (==> set inital state (empty everything))\n}\n\nexport const getUserData = () => (dispatch) => {\n    dispatch({ type: LOADING_USER });\n    axios\n        .get('/user')\n            .then(res => {\n                dispatch({\n                    type: SET_USER,\n                    payload: res.data // Data that sent to reducer\n                })\n            })\n            .catch(err => console.log(err));\n}\n\nexport const uploadImage = (formData) => (dispatch) => {\n    // Call user loading action\n    dispatch({ type: LOADING_USER });\n    axios.post('/user/image', formData)\n        .then(res => {\n            dispatch(getUserData());\n        })\n        .catch(err => console.log(err));\n};\n\n// ftn that send request to edit details\nexport const editUserData = (userData) => (dispatch) => {\n    dispatch({ type: LOADING_USER });\n    axios.post('/user', userData)\n        .then(() => {\n            dispatch(getUserData());\n        })\n        .catch(err => console.log(err));\n}\n\n\nconst setAuthHeader = (token) => {\n    const FBIdToken = `Bearer ${token}`;\n    localStorage.setItem('FBIdToken', `Bearer ${token}`);\n    axios.defaults.headers.common['Authorization'] = FBIdToken; // Each request gonna have a header looking like dat\n}\n\n\nexport const markNotificationsRead = (notificationsIds) => dispatch => {\n    axios.post(`/notifications`, notificationsIds)\n        .then(res => {\n             dispatch({\n                 type: MARK_NOTIFICATIONS\n             })\n        })\n        .catch(err => console.error(err));\n}\n","import React from 'react'\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport default ({ children, tip, onClick, btnClassName, tipClassName, styles }) => (\n    <Tooltip title={tip} className={tipClassName} placement='top'>\n        <IconButton onClick={onClick} className={btnClassName} style={{styles}}>\n            {children}\n        </IconButton>\n    </Tooltip>\n);\n","import {\n  SET_SCREAMS,\n  LOADING_DATA,\n  LIKE_SCREAM,\n  UNLIKE_SCREAM,\n  DELETE_SCREAM,\n  SET_ERRORS,\n  CLEAR_ERRORS,\n  LOADING_UI,\n  POST_SCREAM,\n  SET_SCREAM,\n  STOP_LOADING_UI,\n  SUBMIT_COMMENT\n} from \"../types\";\nimport axios from \"axios\";\n\n// Get all screams\nexport const getScreams = () => dispatch => {\n  dispatch({ type: LOADING_DATA });\n  axios\n    .get(\"/screams\")\n    .then(res => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: []\n      });\n    });\n};\n\n// Like a scream\nexport const likeScream = screamId => dispatch => {\n  axios\n    .get(`/scream/${screamId}/like`)\n    .then(res => {\n      dispatch({\n        type: LIKE_SCREAM,\n        payload: res.data\n      });\n    })\n    .catch(err => console.log(err));\n};\n\n// Unlike a scream\nexport const unlikeScream = screamId => dispatch => {\n  axios\n    .get(`/scream/${screamId}/unlike`)\n    .then(res => {\n      dispatch({\n        type: UNLIKE_SCREAM,\n        payload: res.data\n      });\n    })\n    .catch(err => console.log(err));\n};\n\nexport const deleteScream = screamId => dispatch => {\n  axios\n    .delete(`/scream/${screamId}`)\n    .then(() => {\n      dispatch({\n        type: DELETE_SCREAM,\n        payload: screamId\n      });\n    })\n    .catch(err => console.error(err));\n};\n\n// Post a scream\nexport const postScream = newScream => dispatch => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/scream\", newScream)\n    .then(res => {\n      // dispatch a new type\n      dispatch({\n        type: POST_SCREAM,\n        payload: res.data\n      });\n      dispatch(clearErrors());\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\n// clear errors for posting (Actions creater => function to just dispatch action)\nexport const clearErrors = () => dispatch => {\n  dispatch({ type: CLEAR_ERRORS });\n};\n\nexport const getScream = screamId => dispatch => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .get(`/scream/${screamId}`)\n    .then(res => {\n      dispatch({\n        type: SET_SCREAM,\n        payload: res.data\n      });\n      dispatch({ type: STOP_LOADING_UI });\n    })\n    .catch(err => console.error(err));\n};\n\n// Submit a comment\nexport const submitComment = (screamId, commentData) => dispatch => {\n  axios\n    .post(`/scream/${screamId}/comment`, commentData)\n    .then(res => {\n      dispatch({\n        type: SUBMIT_COMMENT,\n        payload: res.data\n      });\n      dispatch(clearErrors());\n    })\n    .catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\n// Go to user page\nexport const getUserData = userHandle => dispatch => {\n  dispatch({ type: LOADING_DATA });\n  axios\n    .get(`/user/${userHandle}`)\n    .then(res => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: res.data.screams\n      });\n    })\n    .catch(() => {\n      dispatch({\n        type: SET_SCREAMS,\n        payload: null\n      });\n    });\n};\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CustomButton from \"../../util/CustomBotton\";\n\n// Redux tings\nimport { connect } from \"react-redux\";\nimport { postScream, clearErrors } from \"../../redux/actions/dataActions\";\n\n// MUI tings\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = theme => ({\n  ...theme.spreadThis\n});\n\nclass PostScream extends Component {\n  state = {\n    open: false,\n    body: \"\",\n    errors: {}\n  };\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({\n        body: \"\",\n        open: false,\n        errors: {}\n      }); // remove the text when submitted\n    }\n  }\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n  handleClose = () => {\n    this.props.clearErrors(); // clear errors from props\n    this.setState({ open: false, errors: {} }); // Clear the errors once closed\n  };\n  handleChange = e => {\n    // Change for each character\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.postScream({ body: this.state.body });\n  };\n  render() {\n    const { errors } = this.state;\n    const {\n      classes,\n      UI: { loading }\n    } = this.props;\n    return (\n      <Fragment>\n        <CustomButton // Addition button icon\n          onClick={this.handleOpen}\n          tip=\"Make a Post\"\n        >\n          <AddIcon style={{ color: \"#FFFFFF\" }} id=\"postScream\" />\n        </CustomButton>\n        <Dialog // open the dialogue to comment\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth\n        >\n          <CustomButton // The X top right to close\n            tip=\"Close\"\n            onClick={this.handleClose}\n            tipClassName={classes.closeButton}\n          >\n            <CloseIcon />\n          </CustomButton>\n          {/* Section to add comment */}\n          <DialogContent id=\"postAScreamDialaog\">\n            <DialogTitle\n              id=\"whatsOnYourMindTest\"\n              style={{ paddingLeft: \"0px\" }}\n            >\n              What's on your mind?\n            </DialogTitle>\n            <form onSubmit={this.handleSubmit}>\n              <TextField\n                id=\"textAreaTest\"\n                name=\"body\"\n                type=\"text\"\n                label=\"Post\"\n                multiline\n                rows=\"3\"\n                placeholder=\"Spill the beans\"\n                error={errors.body ? true : false} // errors in the validation\n                helperText={errors.body} // show error message\n                className={classes.textField}\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <Button\n                id=\"submitScreamTest\"\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submitButton}\n                disabled={loading}\n              >\n                Submit\n                {loading && (\n                  <CircularProgress\n                    size={30}\n                    className={classes.progrssSpinner}\n                  />\n                )}\n              </Button>\n            </form>\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nPostScream.Prototype = {\n  postScream: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, { postScream, clearErrors })(\n  withStyles(styles)(PostScream)\n);\n","import React, { Component, Fragment } from \"react\";\nimport dayjs from \"dayjs\"; // format the date\nimport relativeTime from \"dayjs/plugin/relativeTime\"; // relative time lib\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\n// MUI tings\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/ToolTip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Badge from \"@material-ui/core/Badge\";\n\n// Icons\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { markNotificationsRead } from \"../../redux/actions/userActions\";\n\nclass Notifications extends Component {\n  state = {\n    anchorEl: null\n  };\n\n  handleOpen = e => {\n    this.setState({\n      anchorEl: e.target // menu = object\n    });\n  };\n\n  // Handle closing the notifications tab\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  // Handle opening the notifications tab\n  onMenuOpened = () => {\n    // Get the unread notification IDs\n    let unreadNotificationsId = this.props.notifications\n      .filter(not => !not.read) // Only add the elements that have not been read to the array (filter)\n      .map(not => not.notificationsId);\n    this.props.markNotificationsRead(unreadNotificationsId); // send the ID to post req to make it as read = true\n  };\n\n  render() {\n    const notifications = this.props.notifications; // notification object\n    const anchorEl = this.state.anchorEl;\n\n    dayjs.extend(relativeTime);\n\n    let notificationsIcon;\n    // Change notification deping on comment or like9\n    if (notifications && notifications.length > 0) {\n      // show the number of nots\n      notifications.filter(not => not.read === false).length > 0 // filter the nonread notifications\n        ? (notificationsIcon = (\n            <Badge\n              badgeContent={\n                notifications.filter(not => not.read === false).length\n              } // Indicate the number of non read notifications\n              color=\"secondary\"\n            >\n              <NotificationsIcon style={{ color: \"#FFFFFF\" }} />\n            </Badge>\n          ))\n        : (notificationsIcon = (\n            <NotificationsIcon style={{ color: \"#FFFFFF\" }} />\n          )); // An empty notification if there no new nots\n    } else {\n      notificationsIcon = <NotificationsIcon style={{ color: \"#FFFFFF\" }} />; // An empty notification if there no new nots\n    }\n\n    let notificationsMarkUp =\n      notifications && notifications.length > 0 ? (\n        // map thru nots and show em\n        notifications.map(not => {\n          // Mapping \"not\" to each of these elements ==> not object = all elements of notification\n\n          const verb = not.type === \"like\" ? \"liked\" : \"commented on\"; // Verb if its a comment of a like\n          const time = dayjs(not.createdAt).fromNow();\n          const iconColor = not.read ? \"primary\" : \"secondary\"; // if read, mark diff colors\n          const icon =\n            not.type === \"like\" ? (\n              <FavoriteIcon color={iconColor} style={{ marginRight: 10 }} /> // Like icon\n            ) : (\n              <ChatIcon color={iconColor} style={{ marginRight: 10 }} /> // Comment icon\n            );\n          return (\n            // List all the notifications\n            <MenuItem key={Math.random()} onClick={this.handleClose}>\n              {icon}\n              <Typography\n                component={Link}\n                color=\"secondary\"\n                variant=\"body1\"\n                to={`/users/${not.recipient}/scream/${not.screamId}`}\n              >\n                {not.sender} {verb} ya post {time}\n              </Typography>\n            </MenuItem>\n          );\n        })\n      ) : (\n        <MenuItem onClick={this.handleClose}>\n          You have no notifications\n        </MenuItem>\n      );\n    return (\n      <Fragment>\n        <Tooltip placement=\"top\" title=\"Notifications\">\n          <IconButton\n            aria-owns={anchorEl ? \"simple-menu\" : undefined}\n            aria-haspopup=\"true\"\n            onClick={this.handleOpen}\n          >\n            {notificationsIcon}\n          </IconButton>\n        </Tooltip>\n        <Menu\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n          onEntered={this.onMenuOpened}\n        >\n          {notificationsMarkUp}\n        </Menu>\n      </Fragment>\n    );\n  }\n}\n\nNotifications.propTypes = {\n  markNotificationsRead: PropTypes.func.isRequired, // post req to mark as read\n  notifications: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  notifications: state.user.notifications\n});\n\nexport default connect(mapStateToProps, { markNotificationsRead })(\n  Notifications\n);\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport CustomBotton from \"../../util/CustomBotton\";\nimport PostScream from \"../Scream/PostScream\";\nimport Notifications from \"./Notifications\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport sixGod from \"../../images/6-god.png\";\n\n// MUI tings\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\n\n// Icons\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { Typography, Grid } from \"@material-ui/core\";\n\nexport class Navbar extends Component {\n  render() {\n    const { authenticated } = this.props;\n    return (\n      <AppBar>\n        {/* Use toolbar because its inline - one after the other */}\n        <Toolbar>\n          {/* When the user is logged in, they'll be prompted with these options */}\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n            style={{ width: \"80%\" }}\n          >\n            <Fragment>\n              <Link to=\"/\" style={{ textDecoration: \"none\", color: \"#000000\" }}>\n                <img\n                  src={sixGod}\n                  alt=\"6 mans\"\n                  style={{\n                    borderRight: \"0.1px solid black\",\n                    height: \"20px\",\n                    padding: \"5px 12px 5px 0\"\n                  }}\n                />\n              </Link>\n              <Link to=\"/\" style={{ textDecoration: \"none\", color: \"#000000\" }}>\n                <Typography style={{ marginLeft: \"10px\" }}>Wagwan</Typography>\n              </Link>\n            </Fragment>\n          </Grid>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            {authenticated ? ( // if user is authenticated\n              <Fragment>\n                <PostScream id=\"postScream\" />\n\n                <Link to=\"/\">\n                  <CustomBotton tip=\"Home\">\n                    <HomeIcon style={{ color: \"#FFFFFF\" }} />\n                  </CustomBotton>\n                </Link>\n\n                <Notifications />\n              </Fragment>\n            ) : (\n              // When user is offline, they'll be prompted with these options\n              <Fragment>\n                <Button color=\"inherit\" component={Link} to=\"/login\">\n                  Login\n                </Button>\n                <Button color=\"inherit\" component={Link} to=\"/\">\n                  Home\n                </Button>\n                <Button color=\"inherit\" component={Link} to=\"/signup\">\n                  Sign Up\n                </Button>\n              </Fragment>\n            )}\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  authenticated: PropTypes.bool // Not required since user might not be authenticated\n};\n\nconst mapStateToProps = state => ({\n  authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => (\n    <Route\n        {...rest}\n        render={(props) =>\n            authenticated === true ? <Redirect to=\"/\" /> : <Component {...props} />\n        }\n    />\n);\n\nconst mapStateToProps = (state) => ({\n    authenticated: state.user.authenticated // Get authenticated prop\n})\n\nAuthRoute.propTypes = {\n    user: PropTypes.object\n};\n\nexport default connect(mapStateToProps)(AuthRoute); // no actions needed\n","import React, { Component, Fragment } from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from 'prop-types';\nimport CustomButton from '../../util/CustomBotton';\n\n// MUI tings\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\n\nimport { connect } from 'react-redux';\nimport { deleteScream } from '../../redux/actions/dataActions';\n\n\nconst styles = {\n    deleteButton: {\n        left: \"92%\",\n        position: \"absolute\",\n        top: \"3%\"\n    }\n}\n\n\n\nclass DeleteScream extends Component {\n    state = {\n        open: false\n    }\n    handleOpen = () => {\n        this.setState({ open: true })\n    }\n    handleClose = () => {\n        this.setState({ open: false })\n    }\n    deleteScream = () => {\n        this.props.deleteScream(this.props.screamId); // passed down from the scream\n        this.setState({ open: false }); // once we delete sceam, close dialog\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Fragment>\n                <CustomButton\n                    tip=\"Delete Post\"\n                    onClick={this.handleOpen}\n                    btnClassName={classes.deleteButton}>\n                        <DeleteOutline  id=\"deleteCommentTest\" style={{ color: \"#e57373\" }} />\n                </CustomButton>\n                <Dialog\n                    open={this.state.open} // handled by open state\n                    onClose={this.handleClose} // handle by close state\n                    fullWidth\n                    maxWidth=\"sm\">\n                     <DialogTitle id=\"youSureFinnaDelete\">\n                         You sure you finna delete the post?\n                    </DialogTitle>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button id=\"deleteThePost\" onClick={this.deleteScream} color='secondary'>\n                            Delete\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        )\n    }\n}\n\nDeleteScream.propTypes = {\n    deleteScream: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired,\n    screamId: PropTypes.string.isRequired\n}\n\n\n// Don't need map state to props, i.e, dont need state only action\nexport default connect(null, { deleteScream })(withStyles(styles)(DeleteScream));\n","import React, { Component } from 'react'\nimport CustomButton from '../../util/CustomBotton';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// Icons\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\n// Redux tings\nimport { connect } from 'react-redux';\nimport { likeScream, unlikeScream } from '../../redux/actions/dataActions';\n\nconst styles = {\n    likeButton: {\n        padding: '4px'\n    }\n}\n\nexport class LikeButton extends Component {\n    likedScream = () => {\n        // Check if theres a likes in user object\n        if (this.props.user.likes &&\n            this.props.user.likes.find(\n                like => like.screamId === this.props.screamId)) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    likeScream = () => {\n        this.props.likeScream(this.props.screamId);\n      };\n    unlikeScream = () => {\n        this.props.unlikeScream(this.props.screamId);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { authenticated } = this.props.user;\n        const likeButton = !authenticated ? ( // Not logged in\n            <Link to='/login'>\n                <CustomButton tip='Like' btnClassName={classes.likeButton}>\n                    <FavoriteBorder color=\"primary\" />\n                </CustomButton>\n            </Link>\n        ) : this.likedScream() ? ( // If returns true, means its present in the array (If user is logged in)\n                <CustomButton tip='Unlike' onClick={this.unlikeScream} btnClassName={classes.likeButton}>\n                    <FavoriteIcon color=\"primary\" />\n                </CustomButton>\n            ) : (\n                <CustomButton tip='Like' onClick={this.likeScream} btnClassName={classes.likeButton}>\n                    <FavoriteBorder color=\"primary\" />\n                </CustomButton>\n            );\n        return likeButton\n    }\n}\n\nLikeButton.propTypes = {\n    user:PropTypes.object.isRequired,\n    screamId: PropTypes.string.isRequired,\n    likeScream: PropTypes.func.isRequired,\n    unlikeScream: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user\n})\n\nconst mapActionsToProps = {\n    likeScream,\n    unlikeScream\n}\n\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(LikeButton));\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\n\n// MUI\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    ...theme.spreadThis,\n});\n\nclass Comments extends Component {\n    render() {\n        const { comments, classes } = this.props; // destructure\n        return (\n            <Grid container>\n                {/* Loop the number of comment times and return each of the comment */}\n                {comments.map((comment, index) => {\n                const {\n                    body,\n                    createdAt,\n                    userImage,\n                    userHandle\n                } = comment;\n                    return ( // returning this in the html\n                        <Fragment key={createdAt}>\n                            <Grid item sm={12}>\n                                <Grid container>\n                                    {/* Image for comments section */}\n                                    <Grid item sm={2}>\n                                        <img src={userImage} alt=\"comment\" className={classes.commentImage}/>\n                                    </Grid>\n                                    <Grid item sm={9}>\n                                        {/* Name */}\n                                        <div className={classes.commentData}>\n                                            <Typography variant=\"h5\" component={Link} to={`/users/${userHandle}`} color=\"primary\">\n                                                    {userHandle}\n                                            </Typography>\n                                            {/* Time */}\n                                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                                    {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\n                                            </Typography>\n                                            <hr className={classes.invisibleSep} />\n                                            {/* Comment */}\n                                            <Typography variant=\"body1\">{body}</Typography>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            {index !== comments.length -1 && ( // Dont add line below last comment\n                                <hr className={classes.visibleSep} />\n                            )}\n                        </Fragment>\n                    )\n                })}\n            </Grid>\n        )\n    }\n\n}\n\nComments.propTypes = {\n    comments: PropTypes.array.isRequired\n};\n\nexport default withStyles(styles)(Comments);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n// MUI tings\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\n// Redux timgs\nimport { connect } from 'react-redux';\nimport { submitComment } from '../../redux/actions/dataActions';\n\nconst styles = theme => ({\n    ...theme.spreadThis\n});\n\nclass CommentForm extends Component {\n    state = {\n        body: '',\n        errors: {}\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.UI.errors) {\n            this.setState({ errors: nextProps.UI.errors})\n        };\n        if (!nextProps.UI.errors && !nextProps.UI.loading) {\n            this.setState({\n                body: ''\n            });\n        };\n    };\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    handleSubmit  = (e) => {\n        e.preventDefault(); // prevents either the buttong or input being clicked, only the form\n        // Create a post request sending data to `/scream/${screamId}/comment`, commentData\n        this.props.submitComment(this.props.screamId, { body: this.state.body });\n    };\n\n    render() {\n        const { authenticated, classes } = this.props; // destructuring props\n        const errors = this.state.errors;\n\n        const commentFormMarkup = authenticated ? (\n            // center align the comments\n            <Grid item sm={12} style={{ textAlign: 'center' }}>\n                <form onSubmit={this.handleSubmit}>\n                    <TextField\n                        name='body'\n                        type='text'\n                        label='Comment on Post'\n                        error={ errors.comment ? true : false}\n                        helperText={errors.comment}\n                        value={this.state.body}\n                        onChange={this.handleChange}\n                        fullWidth\n                        className={classes.textField} />\n\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color='primary'\n                            className={classes.button}>\n                                Submit\n                        </Button>\n\n                </form>\n                <hr className={classes.visibleSep} />\n            </Grid>\n\n        ) : null\n        return commentFormMarkup; // return the comment\n    };\n};\n\nCommentForm.propTypes = {\n    submitComment: PropTypes.func.isRequired,\n    UI: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n    screamId: PropTypes.string.isRequired,\n    authenticated: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    UI: state.UI,\n    authenticated: state.user.authenticated // dont wanna show form if not logged in\n});\n\nexport default connect(mapStateToProps, { submitComment })(withStyles(styles)(CommentForm));\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CustomButton from '../../util/CustomBotton';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\nimport LikeButton from '../Profile/LikeButton'\nimport Comments from './Comments';\nimport CommentForm from './CommentForm';\n\n\n// MUI tings\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n// Icons\nimport CloseIcon from '@material-ui/icons/Close';\nimport ChatIcon from '@material-ui/icons/Chat';\n\n\n// Redux tings\nimport { connect } from 'react-redux';\nimport { getScream, clearErrors } from '../../redux/actions/dataActions';\n\nconst styles = theme => ({\n    ...theme.spreadThis,\n    commentButton: {\n        padding: '5px'\n    }\n});\n\nclass ScreamDialog extends Component {\n    state = {\n        open: false,\n        oldPath: '',\n        newPAth: ''\n    };\n    handleOpen = () => {\n        this.setState({ open: true })\n        this.props.getScream(this.props.screamId); // when open post, need to send req to server to get scream\n    };\n\n    componentDidMount() {\n        if (this.props.openDialog) {\n          this.handleOpen();\n        };\n    };\n    handleOpen = () => { // Create a new path when opening a post\n        let oldPath = window.location.pathname;\n        const { userHandle, screamId } = this.props;\n        const newPath = `/users/${userHandle}/scream/${screamId}`;\n\n        if (oldPath === newPath) { // refresh the old path to not get lost\n            oldPath = `/users/${userHandle}`; // changes the url\n        };\n        window.history.pushState(null, null, newPath); // Go to the new path i.e the mans comments window\n\n        this.setState({ open: true, oldPath, newPath });\n        this.props.getScream(this.props.screamId); // Get the scream info\n\n    };\n\n    handleClose = () => {\n        window.history.pushState(null, null, this.state.oldPath); // change the path back to \"/\"\n        this.setState({ open: false });\n        this.props.clearErrors(); // clear errors when closing\n    };\n\n    render() {\n        const { classes,\n            scream: {\n                screamId,\n                body,\n                createdAt,\n                likeCount,\n                commentCount,\n                userImage,\n                userHandle,\n                comments // array of comments\n            },\n            UI: { loading }\n        } = this.props;\n\n        const dialogMarkUp = loading ? (\n            // Spinner\n            <div className={classes.spinner}>\n                <CircularProgress size={200} thickness={2}/>\n            </div>\n        ) : (\n            <Grid container spacing={1}>\n                {/* Image of commentor */}\n                <Grid item sm={5}>\n                    <img src={userImage} alt =\"Profile\" className={classes.profileImage}/>\n                </Grid>\n                <Grid item sm={7}>\n                    {/* USERS NAME => link to their profile */}\n                    <Typography\n                        component={Link}\n                        color=\"primary\"\n                        variant=\"h5\"\n                        to={`/users/${userHandle}` }>\n                            @{userHandle}\n                    </Typography>\n                    <hr className={classes.invisibleSep} />\n                    {/* Date */}\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\">\n                            {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\n                    </Typography>\n                    <hr className={classes.invisibleSep} />\n                    {/* Content of comment */}\n                    <Typography variant='body1'>\n                        <span>{body}</span>\n                    </Typography>\n\n                    {/* Display like and comment count */}\n                    <LikeButton screamId={screamId} />\n                    <span>{likeCount} Likes</span>\n                    <CustomButton tip=\"Comments\" btnClassName={classes.commentButton}>\n                        <ChatIcon color=\"primary\"/>\n                    </CustomButton>\n                    <span>{commentCount} Comments</span>\n\n                </Grid>\n                <hr className={classes.visibleSep} />\n                {/* Send the screamId to CommentForm => Creates its own comment */}\n                <CommentForm screamId={screamId} />\n                <Comments comments={comments} />\n            </Grid>\n        );\n\n    return (\n        <Fragment>\n            <CustomButton // The expand button for the comments\n                onClick={this.handleOpen}\n                tip=\"Comment\"\n                btnClassName={classes.commentButton}>\n                    <ChatIcon color=\"primary\" />\n            </CustomButton>\n            <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                fullWidth>\n                    {/* Close button */}\n                    <CustomButton\n                        tip='Close'\n                        onClick={this.handleClose}\n                        tipClassName={classes.closeButton}>\n                            <CloseIcon />\n                    </CustomButton>\n                    {/* Content of the scream */}\n                    <DialogContent className={classes.dialogContent}>\n                        {dialogMarkUp}\n                    </DialogContent>\n                </Dialog>\n        </Fragment>\n        );\n    };\n\n};\n\nScreamDialog.propTypes = {\n    getScream: PropTypes.func.isRequired,\n    screamId: PropTypes.string.isRequired,\n    userHandle: PropTypes.string.isRequired,\n    scream: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n    clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    scream: state.data.scream,\n    UI: state.UI\n});\n\nconst mapActionsToProps = {\n    getScream,\n    clearErrors\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog));\n","import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport dayjs from \"dayjs\"; // format the date\nimport relativeTime from \"dayjs/plugin/relativeTime\"; // relative time lib\nimport PropTypes from \"prop-types\";\nimport CustomButton from \"../../util/CustomBotton\";\nimport DeleteScream from \"./DeleteScream\";\nimport ScreamDialog from \"./screamDialog\";\nimport LikeButton from \"../Profile/LikeButton\";\nimport { Link } from \"react-router-dom\";\n\n// MUI tings\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// Redux tings\nimport { connect } from \"react-redux\";\n\n// Icons\nimport UnfoldMoreIcon from \"@material-ui/icons/UnfoldMore\";\n\nconst styles = theme => ({\n  ...theme.spreadThis,\n  card: {\n    position: \"relative\",\n    marginBottom: 20,\n    display: \"flex\"\n  },\n  image: {\n    minWidth: 200\n  },\n  content: {\n    padding: 25,\n    objectFit: \"cover\"\n  }\n});\n\nclass Screams extends Component {\n  render() {\n    dayjs.extend(relativeTime);\n    const {\n      classes,\n      scream: {\n        body,\n        createdAt,\n        userImage,\n        userHandle,\n        screamId,\n        likeCount,\n        commentCount\n      },\n      user: {\n        authenticated,\n        credentials: { handle }\n      }\n    } = this.props; // destrcuture classes\n\n    // Delete Button\n    const deleteButton =\n      authenticated && userHandle === handle ? ( // If the user is authenticated and the post is his\n        <DeleteScream screamId={screamId} /> // If the post is the users, allow delete possibility\n      ) : null;\n\n    return (\n      <Card className={classes.card}>\n        <CardMedia\n          image={userImage}\n          title=\"Profile image\"\n          className={classes.image}\n        />\n        <CardContent className={classes.content}>\n          <Typography\n            variant=\"h5\"\n            component={Link}\n            to={`/users/${userHandle}`}\n            color=\"inherit\"\n          >\n            {userHandle}\n          </Typography>\n\n          {/* Delete Button */}\n          {deleteButton}\n\n          {/* CreateAt */}\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {dayjs(createdAt).fromNow()}\n          </Typography>\n\n          {/* Content */}\n          <Typography variant=\"body1\" id=\"submitedCommentTest\">\n            {body}\n          </Typography>\n\n          {/* Like button */}\n          <LikeButton screamId={screamId} />\n          <span style={{ paddingRight: \"10px\" }}>{likeCount} Likes</span>\n\n          {/* Comments */}\n          <ScreamDialog\n            screamId={screamId}\n            userHandle={userHandle}\n            openDialog={this.props.openDialog}\n          />\n          <span>{commentCount} comments</span>\n\n          {/* Open scream dialogue */}\n          <Link to={`/users/${userHandle}/scream/${screamId}`}>\n            <CustomButton tip=\"Expand\" tipClassName={classes.expandButton}>\n              <UnfoldMoreIcon color=\"primary\" />\n            </CustomButton>\n          </Link>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nScreams.propTypes = {\n  user: PropTypes.object.isRequired,\n  scream: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  openDialog: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Screams));\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CustomButton from '../../util/CustomBotton';\n\n// Redux tings\nimport { connect } from 'react-redux';\nimport { editUserData } from '../../redux/actions/userActions';\n\n// MUI tings\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n// Icon\nimport EditIcon from '@material-ui/icons/Edit'\n\n\nconst styles = theme => ({\n    ...theme.spreadThis,\n    button: {\n        float: \"right\"\n    }\n});\n\nclass EditDetails extends Component {\n    state = {\n        bio: '',\n        website: '',\n        location: '',\n        open: false // Dialogue\n    };\n\n    mapUserDataToState = (credentials) => {\n        this.setState({\n            bio: credentials.bio ? credentials.bio : '',\n            website: credentials.website ? credentials.website : '',\n            location: credentials.location ? credentials.location : ''\n        });\n    };\n\n    handleOpen = () => {\n        this.setState({ open: true });\n        this.mapUserDataToState(this.props.credentials);\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    componentDidMount(){\n        const { credentials } = this.props;\n        this.mapUserDataToState(credentials);\n\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    handleSubmit = () => {\n        const userData = {\n            bio: this.state.bio,\n            website: this.state.website,\n            location: this.state.location,\n        };\n        this.props.editUserData(userData);\n        this.handleClose();\n    }\n\n    render() {\n        const { classes } = this.props\n        return (\n            <Fragment>\n                <CustomButton tip=\"Edit Details\" onClick={this.handleOpen} btnClassName={classes.button}>\n                    <EditIcon color=\"primary\" />\n                </CustomButton>\n\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth\n                    maxWidth=\"sm\">\n                        <DialogTitle>Edit Details</DialogTitle>\n                        <DialogContent>\n                            <form>\n                                <TextField\n                                    name='bio'\n                                    type='text'\n                                    label='Bio'\n                                    multiline\n                                    rows=\"3\"\n                                    placeholder=\"Gimme a bio\"\n                                    className={classes.TextField}\n                                    value={this.state.bio}\n                                    onChange={this.handleChange}\n                                    fullWidth\n                                />\n                                <TextField\n                                    name='website'\n                                    type='text'\n                                    label='Website'\n                                    placeholder=\"Personal website\"\n                                    className={classes.TextField}\n                                    value={this.state.website}\n                                    onChange={this.handleChange}\n                                    fullWidth\n                                />\n                                <TextField\n                                    name='location'\n                                    type='text'\n                                    label='Location'\n                                    placeholder=\"Toss the addy\"\n                                    className={classes.TextField}\n                                    value={this.state.location}\n                                    onChange={this.handleChange}\n                                    fullWidth\n                                />\n                            </form>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={this.handleSubmit} color=\"primary\">\n                                Save\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    credentials: state.user.credentials\n});\n\nEditDetails.propTypes = {\n    editUserData: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapStateToProps, { editUserData })(withStyles(styles)(EditDetails));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport blankMans from '../images/blank_mans.png';\n\n// MUI\nimport Paper from '@material-ui/core/Paper';\n// Icons\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport LinkIcon from '@material-ui/icons/Link';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\n\nconst styles = theme => ({\n    ...theme.spreadThis,\n    handle: {\n        height: 20,\n        backgroundColor: theme.palette.primary.main,\n        width: 60,\n        margin: '0px auto 7px auto',\n    },\n    fullLine: {\n        height: 15,\n        backgroundColor: 'rgba(0,0,0,0.6)',\n        width: '100%',\n        marginBottom: 10,\n    },\n    halfLine: {\n        height: 15,\n        backgroundColor: 'rgba(0,0,0,0.6)',\n        width: '50%',\n        marginBottom: 10,\n    }\n});\n\nconst ProfileSkeleton = (props) => {\n    const { classes } = props;\n    return (\n        <Paper className={classes.paper}>\n            <div className={classes.profile}>\n                {/* Profile Image */}\n                <div className=\"image-wrapper\">\n                    <img src={blankMans} alt=\"profile\" className=\"profile-image\" />\n                </div>\n                    <hr />\n                    {/* Profile details */}\n                <div className=\"profile-details\">\n                    {/* Empty full line */}\n                    <div className={classes.handle} />\n                        <hr />\n                    {/* Empty half line */}\n                    <div className={classes.fullLine} />\n                    <div className={classes.fullLine} />\n                        <hr />\n                    {/* Location */}\n                    <LocationOnIcon color='primary' />\n                    <span>Location</span>\n                        <hr />\n                    {/* Website */}\n                    <LinkIcon color='primary' /> https://website.com\n                        <hr />\n                    {/* Calendar */}\n                    <CalendarTodayIcon color=\"primary\" /> Joined Date\n                </div>\n            </div>\n        </Paper>\n    );\n};\n\nProfileSkeleton.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ProfileSkeleton);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport EditDetails from './EditDetails';\nimport CustomBotton from '../../util/CustomBotton';\nimport ProfileSkeleton from '../../util/ProfileSkeleton';\n\n// MUI tings\nimport Button from '@material-ui/core/Button';\nimport Paper  from '@material-ui/core/Paper';\nimport MLink from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\n// Icons\nimport LocationOn from '@material-ui/icons/LocationOn';\nimport LinkIcon from '@material-ui/icons/Link';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport EditIcon from '@material-ui/icons/Edit';\nimport KeyboardReturn from '@material-ui/icons/KeyboardReturn';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { logoutUser, uploadImage } from '../../redux/actions/userActions';\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  });\n\n\n\nclass Profile extends Component {\n    handleImageChange = (e) => {\n        const profilePic = e.target.files[0];\n        // Sned image to server\n        const formData = new FormData();\n        formData.append('profilePic', profilePic, profilePic.name);\n        this.props.uploadImage(formData);\n    };\n    handlePictureEdit = () => {\n        const fileInput = document.getElementById('profile_image');\n        fileInput.click();\n    };\n    handleLogout = () => {\n      this.props.logoutUser();\n    }\n    render() {\n        const {\n            classes,\n            user: {\n                 credentials: { handle, createAt, imageUrl, bio, website, location },\n                loading, // When profile loading, preivew loading skeleton\n                authenticated\n            }\n        } = this.props\n\n        let profileMarkup = !loading ? (authenticated ? (\n            <Paper className={classes.paper}>\n                <div className={classes.profile}>\n                    <div className=\"image-wrapper\">\n                        <img src={imageUrl} alt=\"profile\" className=\"profile-image\"/>\n                        <input\n                            type='file'\n                            id='profile_image'\n                            hidden='hidden'\n                            onChange={this.handleImageChange}\n                        />\n\n                        <CustomBotton\n                          tip='Edit Profile Picture'\n                          onClick={this.handlePictureEdit}\n                          btnClassName='button'>\n                            <EditIcon color=\"primary\"  />\n                        </CustomBotton>\n\n                    </div><hr />\n                    <div className=\"profile-details\">\n            <MLink component={Link} to={`/users/${handle}`} color=\"primary\" id='userHandleTest' variant=\"h5\">\n                @{handle}\n            </MLink><hr />\n            {bio && <Typography variant=\"body2\">{bio}</Typography>}<hr />\n            {location && (\n                <Fragment>\n                    <LocationOn color=\"primary\"/> <span>{location}</span><hr />\n                </Fragment>\n            )}\n            {website && (\n                <Fragment>\n                    <LinkIcon color=\"primary\" />\n                        <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                            {' '}{website}\n                        </a><hr />\n                </Fragment>\n            )}\n            <CalendarTodayIcon color=\"primary\" />{' '}\n            <span>Joined {dayjs(createAt).format('MMM YYYY')}</span>\n                    </div>\n\n                <CustomBotton tip='Logout'\n                          onClick={this.handleLogout}>\n                            <KeyboardReturn id=\"logoutButton\" color=\"primary\"  />\n                </CustomBotton>\n\n                <EditDetails />\n                </div>\n            </Paper>\n        ) : (\n            <Paper className={classes.paper}>\n                <Typography variant=\"body2\" id=\"doneTesting\" align=\"center\" >\n                    No profile Found, Try again\n                </Typography>\n                <div className={classes.buttons}>\n                    <Button variant=\"contained\" color=\"primary\" id=\"beginLogin\" component={Link} to='/login'>\n                        Login\n                    </Button>\n                    <Button variant=\"contained\" color=\"secondary\" id=\"beginSignup\" component={Link} to='/signup'>\n                        Sign Up\n                    </Button>\n                </div>\n            </Paper>\n        )) : <ProfileSkeleton /> // Load the profile skeleton if everything fails (loading)\n\n        return profileMarkup;\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user\n});\n\nconst mapActionsToProps = {\n    logoutUser,\n    uploadImage\n};\n\nProfile.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  uploadImage: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Profile));\n","import React, { Fragment } from 'react';\nimport blankMans from '../images/blank_mans.png';\nimport PropTypes from 'prop-types';\n\n// MUI tings\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n    ...theme.spreadThis,\n    card: {\n        display: 'flex',\n        marginBottom: 20,\n    },\n    cardContent: {\n        width: '100%',\n        flexDirection: 'column', // so they stack on each other\n        padding: 25\n    },\n    cover: {\n        maxWidth: '22%',\n    },\n    handle: {\n        width: 60,\n        height: 18,\n        backgroundColor: theme.palette.primary.main,\n        marginBottom:10\n    },\n    image: {\n        width: '100%',\n        overflow: 'hidden',\n    },\n    date: {\n        height: 15,\n        width: 100,\n        backgroundColor: 'rgba(0,0,0,0.3)',\n        marginBottom: 10\n\n    },\n    fullLine: {\n        height:15,\n        width: '90%',\n        backgroundColor: 'rgba(0,0,0,0.6)',\n        marginBottom: 10\n    },\n    halfLine: {\n        height:15,\n        width: '50%',\n        backgroundColor: 'rgba(0,0,0,0.6)',\n        marginBottom: 10\n    }\n});\n\nconst ScreamSkeleton = (props) => {\n    const { classes } = props;\n\n    const content = Array.from({ length: 5}).map((item, index) => ( // item not needed (max 5 empty bodys)\n        <Card className={classes.card} key={index}>\n            <CardMedia className={classes.cover}>\n                <img src={blankMans} alt=\"blank mans\" className={classes.image} />\n            </CardMedia>\n            <CardContent className={classes.cardContent}>\n                <div className={classes.handle} />\n                <div className={classes.date} />\n                <div className={classes.fullLine} />\n                <div className={classes.fullLine} />\n                <div className={classes.halfLine} />\n            </CardContent>\n        </Card>\n    ))\n\n    return <Fragment>{content}</Fragment>\n}\n\nScreamSkeleton.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ScreamSkeleton);\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\n\nimport Scream from '../components/Scream/Screams';\nimport Profile from '../components/Profile/Profile';\nimport ScreamSkeleton from '../util/ScreamSkeleton';\n\nimport { connect } from 'react-redux';\nimport { getScreams } from '../redux/actions/dataActions';\n\nclass home extends Component {\n    componentDidMount() {\n        this.props.getScreams();\n    }\n    render() {\n        const { screams, loading } = this.props.data // from data\n\n        let recentScreamsMarkup = !loading ? ( // If not loading, show screams\n            screams.map((scream) =>\n                <Scream\n                    key={scream.screamId}\n                    scream={scream}\n                />)\n        ) : (\n            <ScreamSkeleton /> // Show the skeleton if page still loading\n        );\n        return (\n            <Grid container spacing={3}>\n                <Grid item sm={8} xs={12}>\n                    {recentScreamsMarkup}\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                    <Profile />\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nhome.propTypes = {\n    getScreams: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired // contains screams and loading\n}\n\nconst mapStateToProps = (state) => ({ // data reducer puts data in the obj\n    data: state.data\n})\n\n\nexport default connect(mapStateToProps, { getScreams })(home);\n","import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\"; // Prop types (type checking)\nimport sixGod from \"../images/6-god.png\";\nimport { Link } from \"react-router-dom\";\n\n// MUI tings\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n// Redux tings\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../redux/actions/userActions\";\n\nconst styles = theme => ({\n  ...theme.spreadThis\n});\n\nclass login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.loginUser(userData, this.props.history); // redirects on success\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value // Change char per char\n    });\n  };\n\n  render() {\n    const {\n      classes,\n      UI: { loading }\n    } = this.props; // destructutre\n    const { errors } = this.state;\n    return (\n      <Grid\n        container // outter grid to space in middle\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.form}\n      >\n        {/* Inner grid for content */}\n        <Grid item sm={4}>\n          <img src={sixGod} alt=\"6 mans\" className={classes.image} />\n          <Typography variant=\"h2\" className={classes.pageTitle}>\n            Login\n          </Typography>\n          <form noValidate onSubmit={this.handleSubmit}>\n            <TextField\n              id=\"email\"\n              name=\"email\"\n              type=\"mail\"\n              label=\"Email\"\n              className={classes.TextField}\n              helperText={errors.email} // Display the errors\n              error={errors.email ? true : false}\n              value={this.state.email}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            <TextField\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              className={classes.TextField}\n              helperText={errors.password} // Display the errors\n              error={errors.password ? true : false}\n              value={this.state.password}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            {/* Display errors */}\n            {errors.general && (\n              <Typography variant=\"body2\" className={classes.LoginError}>\n                {errors.general}\n              </Typography>\n            )}\n            {/* Submit button */}\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              disabled={loading}\n              id=\"loginButtonLogin\"\n            >\n              Login\n              {/* Loading circle when logging in */}\n              {loading && (\n                <CircularProgress size={30} className={classes.loading} />\n              )}\n            </Button>\n            <br />\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Typography style={{ margin: \"5px\" }}>\n                <Link\n                  style={{ fontSize: \"14px\", color: \"#1976d2\" }}\n                  to=\"/signup\"\n                >\n                  Signup\n                </Link>\n              </Typography>\n              <Typography style={{ fontSize: \"14px\", color: \"#000000\" }}>\n                |\n              </Typography>\n              <Typography style={{ margin: \"5px\" }}>\n                <Link\n                  style={{ fontSize: \"14px\", color: \"#1976d2\" }}\n                  to=\"/reset\"\n                >\n                  Reset Password\n                </Link>\n              </Typography>\n            </Grid>\n          </form>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nlogin.propTypes = {\n  // All added to props\n  classes: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\n// Props\nconst mapStateToProps = state => ({\n  // Access objects from redux state\n  user: state.user,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  loginUser\n}; // what actions we're going to use\n\n// export component that need access to change Redux state.\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withStyles(styles)(login));\n","import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\"; // Prop types (type checking)\nimport sixGod from \"../images/6-god.png\";\n\n// MUI tings\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n// Redux tings\nimport { connect } from \"react-redux\";\nimport { signupUser } from \"../redux/actions/userActions\";\n\nconst styles = theme => ({\n  ...theme.spreadThis\n});\n\nclass signup extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      handle: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({ errors: nextProps.UI.errors });\n    }\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.setState({\n      loading: true\n    });\n    const newUserData = {\n      email: this.state.email,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n      handle: this.state.handle\n    };\n    this.props.signupUser(newUserData, this.props.history);\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const {\n      classes,\n      UI: { loading }\n    } = this.props; // destructutre\n    const { errors } = this.state;\n    const Link = require(\"react-router-dom\").Link;\n    return (\n      <Grid container className={classes.form}>\n        <Grid item sm />\n        <Grid item sm>\n          <img src={sixGod} alt=\"6 mans\" className={classes.image} />\n          <Typography variant=\"h2\" className={classes.pageTitle}>\n            Sign Up\n          </Typography>\n          <form noValidate onSubmit={this.handleSubmit}>\n            <TextField\n              id=\"email\"\n              name=\"email\"\n              type=\"mail\"\n              label=\"Email\"\n              className={classes.TextField}\n              helperText={errors.email} // Display the errors\n              error={errors.email ? true : false}\n              value={this.state.email}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            <TextField\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              className={classes.TextField}\n              helperText={errors.password} // Display the errors\n              error={errors.password ? true : false}\n              value={this.state.password}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            <TextField\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              type=\"password\"\n              label=\"Confirm Password\"\n              className={classes.TextField}\n              helperText={errors.confirmPassword} // Display the errors\n              error={errors.confirmPassword ? true : false}\n              value={this.state.confirmPassword}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            <TextField\n              id=\"handle\"\n              name=\"handle\"\n              type=\"text\"\n              label=\"Handle\"\n              className={classes.TextField}\n              helperText={errors.handle} // Display the errors\n              error={errors.handle ? true : false}\n              value={this.state.handle}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            {errors.general && (\n              <Typography variant=\"body2\" className={classes.LoginError}>\n                {errors.general}\n              </Typography>\n            )}\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              disabled={loading}\n              id=\"SignButtonSign\"\n            >\n              Sign Up\n              {loading && (\n                <CircularProgress size={30} className={classes.loading} />\n              )}\n            </Button>\n            <br />\n            {/* Create an account form */}\n            <small>\n              Have an account? Login <Link to=\"/login\">Here</Link>\n            </small>\n          </form>\n        </Grid>\n        <Grid item sm />\n      </Grid>\n    );\n  }\n}\n\nsignup.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\nexport default connect(mapStateToProps, { signupUser })(\n  withStyles(styles)(signup)\n);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\n\n// MUI tings\nimport  MUILink from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\n// Icons\nimport LocationOn from '@material-ui/icons/LocationOn';\nimport LinkIcon from '@material-ui/icons/Link';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\n\nconst styles = (theme) => ({\n  ...theme.spreadThis\n  });\n\nconst StaticProfile = (props) => {\n    const {\n        classes,\n        profile: {\n            handle,\n            createdAt,\n            imageUrl,\n            bio,\n            website,\n            location }\n        } = props\n\n        return (\n            <Paper className={classes.paper}>\n            <div className={classes.profile}>\n                <div className=\"image-wrapper\">\n                    <img src={imageUrl} alt=\"profile\" className=\"profile-image\"/>\n                </div><hr />\n                <div className=\"profile-details\">\n        <MUILink component={Link} to={`/users/${handle}`} color=\"primary\" variant=\"h5\">\n            @{handle}\n        </MUILink><hr />\n        {bio && <Typography variant=\"body2\">{bio}</Typography>}<hr />\n        {location && (\n            <Fragment>\n                <LocationOn color=\"primary\"/> <span>{location}</span><hr />\n            </Fragment>\n        )}\n        {website && (\n            <Fragment>\n                <LinkIcon color=\"primary\" />\n                    <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {' '}{website}\n                    </a><hr />\n            </Fragment>\n        )}\n        <CalendarTodayIcon color=\"primary\" />{' '}\n        <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\n                </div>\n            </div>\n        </Paper>\n\n        )\n\n}\n\nStaticProfile.prototypes = {\n    profile: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n}\n\n\nexport default withStyles(styles)(StaticProfile)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Screams from '../components/Scream/Screams';\nimport Grid from '@material-ui/core/Grid';\nimport StaticProfile from '../components/Profile/StaticProfile';\nimport Scream from '../components/Scream/Screams';\n\nimport { connect } from 'react-redux';\nimport { getUserData } from '../redux/actions/dataActions';\n\nimport ScreamSkeleton from '../util/ScreamSkeleton';\nimport ProfileSkeleton from '../util/ProfileSkeleton';\n\nclass users extends Component {\n    state = { // Data\n        profile: null,\n        screamIdParam: null\n    };\n    componentDidMount() {\n        const handle = this.props.match.params.handle; // Get handle from URL ('/user/:handle')\n        const screamId = this.props.match.params.screamId; // Get screamId from URL\n        if (screamId) { // If we get a screamId, set it to paramss\n            this.setState({ screamIdParam: screamId })\n        };\n        this.props.getUserData(handle);\n\n        axios.get(`/user/${handle}`) // getUserDetails\n            .then(res => {\n                this.setState({\n                    profile: res.data.user // Add the response data into profile\n                })\n            })\n            .catch(err => console.log(err));\n\n    };\n    render() {\n        const { screams, loading } = this.props.data;\n        const { screamIdParam } = this.state;\n\n        const screamsMarkup = loading ? (\n            <ScreamSkeleton /> // If loading, display the skeleton\n            // Havent posted anything\n        ) : screams === null ? (\n            <p>This mans hasn't posted anything yet</p>\n            // H\n        ) : !screamIdParam  ? (\n            screams.map(scream => <Screams key={scream.screamId} scream={scream} />)\n        ) : ( // trying to visit scream\n            screams.map(scream => {\n                if (scream.screamId !== screamIdParam) {\n                    return <Scream key={scream.screamId} scream={scream} />\n                } else {\n                    return <Scream key={scream.screamId} scream={scream} openDialog />\n                }\n            })\n        );\n        return (\n            <Grid container spacing={3}>\n                <Grid item sm={8} xs={12}>\n                    {screamsMarkup}\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                    {this.state.profile === null ? (\n                        <ProfileSkeleton /> // If there are no profiles ==> load skeleton\n                    ) :  (\n                        <StaticProfile profile={this.state.profile} /> // load the profiles\n                    )}\n                </Grid>\n            </Grid>\n            );\n        };\n    };\n\nusers.propTypes = {\n    getUserData: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    data: state.data\n});\n\nexport default connect(mapStateToProps, {getUserData})(users);\n","import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\"; // Prop types (type checking)\nimport sixGod from \"../images/6-god.png\";\nimport axios from \"axios\";\n\n// MUI tings\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n// Redux tings\nimport { connect } from \"react-redux\";\n\nconst styles = theme => ({\n  ...theme.spreadThis\n});\n\nclass reset extends Component {\n  constructor() {\n    super();\n    this.state = {\n      resetPass: false,\n      email: null,\n      errors: {}\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.email === null) {\n      const errorEmail = { email: \"Please input an email\" };\n      this.setState({\n        errors: errorEmail\n      });\n    } else {\n      this.setState({\n        errors: \"\"\n      });\n      const user = { email: this.state.email };\n      axios\n        .post(\"/reset\", user)\n        .then(() => {\n          this.setState({\n            resetPass: true\n          });\n        })\n        .catch(err => {\n          console.log(err);\n        });\n\n      this.setState({\n        email: \"\"\n      });\n    }\n  };\n\n  handleChange = e => {\n    this.setState({\n      email: e.target.value // Change char per char\n    });\n  };\n  render() {\n    const displayResetPassword = this.state.resetPass ? (\n      <Typography color=\"secondary\">\n        Your password reset email has been sent\n      </Typography>\n    ) : null;\n    const {\n      classes,\n      UI: { loading }\n    } = this.props; // destructutre\n    const { errors } = this.state;\n    return (\n      <Grid\n        container // outter grid to space in middle\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.form}\n      >\n        {/* Inner grid for content */}\n        <Grid item sm={4}>\n          <img src={sixGod} alt=\"6 mans\" className={classes.image} />\n          <Typography variant=\"h4\" className={classes.pageTitle}>\n            Reset Password\n          </Typography>\n          <form noValidate onSubmit={this.handleSubmit}>\n            <TextField\n              id=\"email\"\n              name=\"email\"\n              type=\"mail\"\n              label=\"Email\"\n              className={classes.TextField}\n              helperText={errors.email} // Display the errors\n              error={this.state.errors.email ? true : false}\n              value={this.state.email || \"\"}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            <Typography>{}</Typography>\n            {displayResetPassword}\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              disabled={loading}\n              id=\"loginButtonLogin\"\n            >\n              Send Email\n              {/* Loading circle when logging in */}\n              {loading && (\n                <CircularProgress size={30} className={classes.loading} />\n              )}\n            </Button>\n          </form>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nreset.propTypes = {\n  // All added to props\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\n// Props\nconst mapStateToProps = state => ({\n  // Access objects from redux state\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(reset));\n","import React, { Component } from 'react';\nimport{ BrowserRouter as Router , Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport jwtDecode from 'jwt-decode';\nimport axios from 'axios';\n\n\n// Redux\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport { SET_AUTHENTICATED } from './redux/types';\nimport { logoutUser, getUserData } from './redux/actions/userActions';\n\n// Components\nimport NavBar from './components/Layout/Navbar';\nimport AuthRoute from './util/AuthRoute';\nimport themeFile from './util/theme';\n\n\n//Pages\nimport home from './pages/home';\nimport login from './pages/login';\nimport signup from './pages/signup';\nimport user from './pages/users';\nimport reset from './pages/reset';\n\nconst theme = createMuiTheme(themeFile);\n\naxios.defaults.baseURL = \"https://us-central1-wagwan-6797c.cloudfunctions.net/api\";\n\n// Get token\n\nconst token = localStorage.FBIdToken;\nif (token){\n  const decodedToken = jwtDecode(token);\n  if (decodedToken.exp * 1000 < Date.now()) { // The token expired (in seconds)\n    store.dispatch(logoutUser()); // Will remove token and logout\n    window.location.href = '/login'; // go back to login page\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData());\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n            <Router>\n            <NavBar />\n              <div className='container'>\n                <Switch>\n                  <Route exact path=\"/\" component={home} />\n                  <AuthRoute exact path=\"/login\" component={login} />\n                  <AuthRoute exact path=\"/signup\" component={signup} />\n                  <Route exact path=\"/users/:handle\" component={user} />\n                  <Route exact path=\"/users/:handle/scream/:screamId\" component={user} />\n                  <Route exact path=\"/reset\" component={reset} />\n                </Switch>\n              </div>\n            </Router>\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","export default {\n    palette: {\n      primary: {\n        light: '#ffffff',\n        main: '#b3e5fc',\n        dark: '#c7c7c7',\n        contrastText: '#000',\n      },\n      secondary: {\n        light: '#63a4ff',\n        main: '#1976d2',\n        dark: '#004ba0',\n        contrastText: '#fff',\n      }\n    },\n    typography: {\n      useNextVariants: true\n    },\n\n    spreadThis: {\n      form: {\n        textAlign: 'center'\n      },\n      image: {\n          height: 60,\n          margin: '20px auto 10px auto'\n      },\n      pageTitle: {\n          margin: '10px auto 10px auto'\n      },\n      TextField: {\n          margin: '10px auto 10px auto'\n      },\n      button: {\n          marginTop: 20,\n          position: 'relative'\n      },\n      LoginError: {\n          color: 'red',\n          fontSize: '12px',\n          marginTop: '10px'\n      },\n      loading: {\n          position: 'absolute'\n      },\n      invisibleSep: {\n        border: 'none',\n        margin: 4\n      },\n      visibleSep: {\n        width: '100%',\n        borderBottom: '1px solid rgba(0,0,0,0,0.1)',\n        marginBottom: '5px'\n      },\n      paper: {\n        padding: 20\n      },\n      profile: {\n        '& .image-wrapper': {\n          textAlign: 'center',\n          position: 'relative',\n          '& button': {\n            position: 'absolute',\n            top: '80%',\n            left: '70%'\n          }\n        },\n        '& .profile-image': {\n          width: 200,\n          height: 200,\n          objectFit: 'cover',\n          maxWidth: '100%',\n          borderRadius: '50%'\n        },\n        '& .profile-details': {\n          textAlign: 'center',\n          '& span, svg': {\n            verticalAlign: 'middle'\n          },\n          '& a': {\n            color: \"#b3e5fc\"\n          }\n        },\n        '& hr': {\n          border: 'none',\n          margin: '0 0 10px 0'\n        },\n        '& svg.button': {\n          '&:hover': {\n            cursor: 'pointer'\n          }\n        }\n      },\n      buttons: {\n        textAlign: 'center',\n        '& a': {\n          margin: '20px 10px'\n        }\n      },\n      commentImage: {\n        maxWidth: '100%',\n        height: 100,\n        objectFit: 'cover',\n        borderRadius: '50%'\n    },\n    commentData: {\n        marginLeft: 20\n    },\n    submitButton: {\n      position: 'relative',\n      margin: '20px auto 10px auto',\n      float: \"right\"\n  },\n  progrssSpinner: {\n      position: 'absolute'\n  },\n  closeButton: {\n      position: 'absolute',\n      left: '92%',\n      top: '3%'\n  },\nprofileImage: {\n    maxWidth: 200,\n    height: 200,\n    borderRadius: '50%',\n    objectFit: 'cover'\n},\nDialogContent: {\n    padding: 20\n},\nexpandButton: {\n    position: 'absolute',\n    left: '92%'\n},\nspinner: {\n    textAlign: 'center',\n    marginTop: 50,\n    marginBottom: 50,\n\n}\n    }\n  }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/6-god.b8bbf038.png\";","module.exports = __webpack_public_path__ + \"static/media/blank_mans.ae18a9e6.png\";"],"sourceRoot":""}